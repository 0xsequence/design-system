import{j as e}from"./jsx-runtime-a9c13c85.js";import"./Box-fa0ac857.js";import"./Avatar-a9782bbc.js";import"./Badge-7c56dce6.js";import"./Breadcrumbs-b5b6fb20.js";import{B as i}from"./Button-7f73e633.js";import"./atoms-37a3518e.js";/* empty css                              */import"./Card-9fb4ff46.js";import"./Checkbox-bfa9ef44.js";import"./ControlledSwitch-a44dbaed.js";import{T as p,u as s}from"./Tooltip-3f6592d9.js";import"./index-04606dac.js";import"./DropdownMenu-6a743be8.js";import"./FileInput-27fa3cd3.js";import"./Field-23124bcb.js";import"./IconButton-752759c9.js";import"./TokenImage-b5cd7f31.js";import"./Modal-4d25c564.js";import"./RadioGroup-29735aca.js";import"./Scroll-99234cc4.js";import"./Select-b7673ea1.js";import"./Spinner-bf580b44.js";import"./StopClickPropagation-5f4da872.js";import"./Switch-92b74135.js";import"./TabbedNav-f5483909.js";import"./Tag-549b34e8.js";import"./Text-e0b7a790.js";import"./ControlledTextInput-052ce1d1.js";import"./index-d8ade8ea.js";import"./_commonjsHelpers-042e6b4d.js";import"./index-4d501b15.js";import"./vanilla-extract-recipes-createRuntimeFn.esm-d30eb010.js";import"./Divider-9e14b5ff.js";import"./extends-98964cd2.js";import"./index.module-d15610cf.js";import"./index-ffd4619b.js";import"./index.module-e6a6661a.js";import"./index.module-45828978.js";import"./index.module-732cca0e.js";import"./WarningIcon-25714511.js";import"./index.module-a9b21657.js";import"./motion-7df5a7b3.js";import"./NumericInput-f421ce2c.js";import"./index.module-3bb41f79.js";import"./index.module-8c7796ea.js";import"./Combination-78ef0d5c.js";import"./index.module-b2b96eed.js";import"./index.module-f17d4a85.js";import"./Image-58163d4a.js";import"./index-807b81f6.js";import"./typography-f274f330.js";const st={title:"Components/ThemeProvider",component:p},t=()=>{const{theme:r,setTheme:m}=s();return e(i,{label:"Toggle theme",onClick:()=>{m(r==="light"?"dark":"light")}})};var o;t.parameters={...t.parameters,storySource:{source:`() => {
  const {
    theme,
    setTheme
  } = useTheme();
  const toggleTheme = () => {
    setTheme(theme === 'light' ? 'dark' : 'light');
  };
  return <Button label="Toggle theme" onClick={toggleTheme} />;
}`,...(o=t.parameters)==null?void 0:o.storySource}};const ht=["Default"];export{t as Default,ht as __namedExportsOrder,st as default};
//# sourceMappingURL=ThemeProvider.stories-404f76bf.js.map
