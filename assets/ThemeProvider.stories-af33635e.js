import{j as s}from"./jsx-runtime-5c44f2f2.js";import"./Box-8551d976.js";import"./Badge-58f9240b.js";import"./Breadcrumbs-a1469f27.js";import{B as a}from"./Button-ee6735f4.js";import"./Card-0aba2011.js";import"./Checkbox-fbdeae0e.js";import"./ControlledSwitch-39d14bb3.js";import{a as h,u as l}from"./Tooltip-6d8a3ef8.js";import"./index-693beb70.js";import"./DropdownMenu-b4dc8e57.js";import"./FileInput-c9471673.js";import"./Field-4629ff50.js";import"./IconButton-0cd9b95b.js";import"./TokenImage-f9b418b4.js";import"./Modal-0e4241a0.js";import"./Placeholder-625c444c.js";import"./RadioGroup-e1fadc1a.js";import"./Scroll-1a28b689.js";import"./Select-4c1c59f7.js";import"./Spinner-d6209825.js";import"./StopClickPropagation-8c922c89.js";import"./Switch-2cb25669.js";import"./TabbedNav-364cea15.js";import"./Tag-d2824a83.js";import"./Text-7175ab01.js";import"./Toast-162ec627.js";import"./TextArea-f8c3a908.js";import"./ControlledTextInput-8a9a30b4.js";import"./index-32f9f3e1.js";import"./atoms-27ff9aca.js";/* empty css                              */import"./vanilla-extract-recipes-createRuntimeFn.esm-bf276de8.js";import"./Divider-d96ab6b3.js";import"./index-6f43092a.js";import"./index-81ed4395.js";import"./index-b52b8797.js";import"./index-6a3890d8.js";import"./index-8354a9f7.js";import"./index-71218d5e.js";import"./WarningIcon-c36696cd.js";import"./index-15d4be11.js";import"./motion-4bf1f684.js";import"./index-f81d6c2b.js";import"./NumericInput-f356b614.js";import"./Progress-356d75db.js";import"./index-113ea006.js";import"./index-8f4e5a65.js";import"./index-7ba41556.js";import"./index-7b73788f.js";import"./index-0f94332e.js";import"./index-3d0a8b6c.js";import"./Combination-35ba128e.js";import"./index-f4397dff.js";import"./Image-ccb0f2e1.js";import"./typography-f274f330.js";const gt={title:"Components/ThemeProvider",component:h},t=()=>{const{theme:e,setTheme:i}=l(),p=()=>{i(e==="light"?"dark":"light")};return s.jsx(a,{label:"Toggle theme",onClick:p})};var o,r,m;t.parameters={...t.parameters,docs:{...(o=t.parameters)==null?void 0:o.docs,source:{originalSource:`() => {
  const {
    theme,
    setTheme
  } = useTheme();
  const toggleTheme = () => {
    setTheme(theme === 'light' ? 'dark' : 'light');
  };
  return <Button label="Toggle theme" onClick={toggleTheme} />;
}`,...(m=(r=t.parameters)==null?void 0:r.docs)==null?void 0:m.source}}};const ut=["Default"];export{t as Default,ut as __namedExportsOrder,gt as default};
//# sourceMappingURL=ThemeProvider.stories-af33635e.js.map
