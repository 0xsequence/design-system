var d=Object.defineProperty;var a=(p,e)=>d(p,"name",{value:e,configurable:!0});import"./jsx-runtime.e9e872a3.js";import{c as t,A as x,M as y}from"./Props.1ce0fa48.js";import"./iframe.5afd4e53.js";import"./Avatar.7855c40f.js";import"./Badge.90809c9d.js";import"./Box.329586f8.js";import"./Button.b7589b93.js";/* empty css                             *//* empty css                              */import"./Collapsible.9adacd1a.js";import"./Form.f3ec1150.js";import"./Group.20b9c9ba.js";import"./IconButton.364f96b2.js";import"./LabelledField.b7253ef9.js";import"./Modal.7033515c.js";import"./Row.6d94d517.js";import"./Spinner.54b631ca.js";import"./Stack.5aeff042.js";import"./Switch.4b036179.js";import"./Tabs.62f76a3b.js";import"./TabbedNav.fa9a8a90.js";import"./Tag.0341f020.js";import{T as o}from"./Text.b7f24ee0.js";import"./TextInput.d1153e02.js";import"./ThemeProvider.c92e08d8.js";import"./TokenImage.e852b353.js";import"./Tooltip.fda38aa7.js";import"./string.f74e6fdb.js";import"./index.64b4d3c0.js";import"./es.map.constructor.b066faa0.js";import"./es.number.to-fixed.012a1d80.js";import"./index.3f9518bc.js";import"./vanilla-extract-recipes-createRuntimeFn.esm.e63f122f.js";import"./atoms.css.b06098ab.js";import"./index.module.1e6815e9.js";import"./index.2b30b5c3.js";import"./index.module.42c60f9b.js";import"./index.module.1f8be29f.js";import"./WarningIcon.8d5b9087.js";import"./index.cdafd52a.js";import"./tslib.es6.03b483f6.js";import"./index.module.8544f59c.js";import"./index.482e2958.js";import"./index.module.05f83b63.js";import"./index.module.5fbd25ca.js";import"./index.module.a342e0af.js";import"./index.module.37d05738.js";function s(){return s=Object.assign?Object.assign.bind():function(p){for(var e=1;e<arguments.length;e++){var n=arguments[e];for(var i in n)Object.prototype.hasOwnProperty.call(n,i)&&(p[i]=n[i])}return p},s.apply(this,arguments)}a(s,"_extends");const r="The quick brown fox jumps over the lazy dog",u={sampleText:r},g="wrapper";function l({components:p,...e}){return t(g,s({},u,e,{components:p,mdxType:"MDXLayout"}),t(y,{title:"Design System/Typography",mdxType:"Meta"}),t("h1",null,"Typography"),t("p",null,"The defined set of typefaces and used in the design system."),t("p",null,t("strong",{parentName:"p"},"xlarge")),t(o,{variant:"xlarge",mdxType:"Text"},r),t("p",null,t("strong",{parentName:"p"},"large")),t(o,{variant:"large",mdxType:"Text"},r),t("p",null,t("strong",{parentName:"p"},"medium")),t(o,{variant:"medium",mdxType:"Text"},r),t("p",null,t("strong",{parentName:"p"},"normal")),t(o,{variant:"normal",mdxType:"Text"},r),t("p",null,t("strong",{parentName:"p"},"small")),t(o,{variant:"small",mdxType:"Text"},r),t("p",null,t("strong",{parentName:"p"},"xsmall")),t(o,{variant:"xsmall",mdxType:"Text"},r),t("p",null,t("strong",{parentName:"p"},"code")),t(o,{variant:"code",mdxType:"Text"},r))}a(l,"MDXContent");l.isMDXComponent=!0;const T=a(()=>{throw new Error("Docs-only story")},"__page");T.parameters={docsOnly:!0};const m={title:"Design System/Typography",includeStories:["__page"]},c={};m.parameters=m.parameters||{};m.parameters.docs={...m.parameters.docs||{},page:()=>t(x,{mdxStoryNameToKey:c,mdxComponentAnnotations:m},t(l,null))};const xt=["sampleText","__page"];export{xt as __namedExportsOrder,T as __page,m as default,r as sampleText};
//# sourceMappingURL=Typography.stories.c765a0db.js.map
