{"version":3,"file":"TabbedNav.stories-96a2cc5b.js","sources":["../../src/components/TabbedNav/TabbedNav.tsx"],"sourcesContent":["import { clsx } from 'clsx'\nimport { ComponentType, MouseEvent, ReactNode, useState } from 'react'\n\nimport { Box, PolymorphicProps } from '~/components/Box'\nimport { Button } from '~/components/Button'\nimport { IconProps } from '~/icons/types'\n\nimport { tabVariants, TabVariants } from './styles.css'\n\nexport type TabOption = {\n  label: ReactNode\n  leftIcon?: ComponentType<IconProps>\n  value: string\n  disabled?: boolean\n  onLoad?: () => boolean | Promise<boolean>\n}\n\ntype TabbedNavProps = {\n  defaultValue?: string\n  size?: 'xs' | 'sm'\n  tabs: TabOption[]\n  onTabChange?: (value: string) => void\n} & TabVariants\n\nexport const TabbedNav = (props: PolymorphicProps<TabbedNavProps, 'div'>) => {\n  const {\n    className,\n    defaultValue,\n    onTabChange,\n    size = 'sm',\n    tabs,\n    variant = 'pill',\n    ...rest\n  } = props\n\n  const [isLoading, setIsLoading] = useState<boolean>(false)\n  const [value, setValue] = useState<string>(defaultValue ?? tabs[0].value)\n\n  const handleTabClick = async (\n    event: MouseEvent<HTMLButtonElement>,\n    option: TabOption,\n    tabIndex: number\n  ) => {\n    event.preventDefault()\n\n    const prevValue = value\n\n    if (value === option.value) {\n      return\n    }\n\n    setValue(tabs[tabIndex].value)\n\n    setIsLoading(true)\n\n    const loadSucceeded = option.onLoad ? await option.onLoad?.() : true\n\n    setIsLoading(false)\n\n    if (loadSucceeded) {\n      onTabChange?.(option.value)\n    } else {\n      setValue(prevValue)\n    }\n  }\n\n  return (\n    <Box as=\"nav\" {...rest}>\n      <Box as=\"ul\" gap=\"2\">\n        {tabs.map((option, tabIndex) => {\n          const isActive = option.value === value\n\n          return (\n            <Box\n              as=\"li\"\n              key={tabIndex}\n              borderTopColor={\n                variant === 'line'\n                  ? isActive\n                    ? 'text100'\n                    : 'transparent'\n                  : undefined\n              }\n              borderTopStyle={variant === 'line' ? 'solid' : undefined}\n              borderTopWidth={variant === 'line' ? 'thick' : undefined}\n            >\n              <Button\n                className={clsx(\n                  className,\n                  tabVariants({ active: isActive, variant })\n                )}\n                variant={variant === 'line' ? 'text' : 'base'}\n                disabled={isLoading || option.disabled}\n                label={option.label}\n                leftIcon={option.leftIcon ?? undefined}\n                onClick={(ev: MouseEvent<HTMLButtonElement>) =>\n                  handleTabClick(ev, option, tabIndex)\n                }\n                padding={variant === 'line' ? '2' : undefined}\n                paddingLeft={option.leftIcon ? '1' : '2'}\n                size={size}\n                borderRadius=\"circle\"\n              />\n            </Box>\n          )\n        })}\n      </Box>\n    </Box>\n  )\n}\n"],"names":["TabbedNav","props","className","defaultValue","onTabChange","size","tabs","variant","rest","isLoading","setIsLoading","useState","value","setValue","handleTabClick","event","option","tabIndex","prevValue","loadSucceeded","_a","jsx","Box","isActive","Button","clsx","tabVariants","ev"],"mappings":"g2BAwBO,MAAAA,EAAAC,GAAA,CACL,KAAA,CAAM,UAAAC,EACJ,aAAAC,EACA,YAAAC,EACA,KAAAC,EAAA,KACO,KAAAC,EACP,QAAAC,EAAA,OACU,GAAAC,CACP,EAAAP,EAGL,CAAAQ,EAAAC,CAAA,EAAAC,EAAA,SAAA,EAAA,EACA,CAAAC,EAAAC,CAAA,EAAAF,EAAA,SAAAR,GAAAG,EAAA,CAAA,EAAA,KAAA,EAEAQ,EAAA,MAAAC,EAAAC,EAAAC,IAAA,OAKEF,EAAA,eAAA,EAEA,MAAAG,EAAAN,EAEA,GAAAA,IAAAI,EAAA,MACE,OAGFH,EAAAP,EAAAW,CAAA,EAAA,KAAA,EAEAP,EAAA,EAAA,EAEA,MAAAS,EAAAH,EAAA,OAAA,OAAAI,EAAAJ,EAAA,SAAA,YAAAI,EAAA,KAAAJ,IAAA,GAEAN,EAAA,EAAA,EAEAS,EACEf,GAAA,MAAAA,EAAAY,EAAA,OAEAH,EAAAK,CAAA,CACF,EAGF,OAAAG,EAAA,IAAAC,EAAA,CAAA,GAAA,MAAA,GAAAd,EAAA,SAAAa,EAAAA,IAAAC,EAAA,CAAA,GAAA,KAAA,IAAA,IAAA,SAAAhB,EAAA,IAAA,CAAAU,EAAAC,IAAA,CAIQ,MAAAM,EAAAP,EAAA,QAAAJ,EAEA,OAAAS,EAAA,IACEC,EAAC,CAAA,GAAA,KACI,eAAAf,IAAA,OAAAgB,EAAA,UAAA,cAAA,OAOG,eAAAhB,IAAA,OAAA,QAAA,OAEyC,eAAAA,IAAA,OAAA,QAAA,OACA,SAAAc,EAAA,IAE/CG,EAAC,CAAA,UAAAC,EACYvB,EACTwB,EAAA,CAAA,OAAAH,EAAA,QAAAhB,CAAA,CAAA,CACyC,EAC3C,QAAAA,IAAA,OAAA,OAAA,OACuC,SAAAE,GAAAO,EAAA,SACT,MAAAA,EAAA,MAChB,SAAAA,EAAA,UAAA,OACe,QAAAW,GAAAb,EAAAa,EAAAX,EAAAC,CAAA,EAEQ,QAAAV,IAAA,OAAA,IAAA,OAED,YAAAS,EAAA,SAAA,IAAA,IACC,KAAAX,EACrC,aAAA,QACa,CAAA,CACf,EAAAY,CA3BK,CA4BP,CAAA,CAAA,CAAA,CAAA,CAAA,CAMZ;;;;;;;;;;;;;;"}