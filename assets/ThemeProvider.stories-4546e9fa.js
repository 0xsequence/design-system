import{j as s}from"./jsx-runtime-69eee039.js";import"./Box-64e6f390.js";import"./Badge-d25a4003.js";import"./Breadcrumbs-5b9ba154.js";import{B as a}from"./Button-48a02c83.js";import"./Card-3644cb4b.js";import"./Checkbox-6629913b.js";import"./ControlledSwitch-8f84926e.js";import{a as h,u as l}from"./Tooltip-2828ef00.js";import"./index-33562477.js";import"./DropdownMenu-990aa86f.js";import"./FileInput-3abe7cf9.js";import"./Field-fe8d85f8.js";import"./IconButton-30f9ce6b.js";import"./TokenImage-5bc9e427.js";import"./Modal-f85ebdb5.js";import"./Placeholder-8e447ab4.js";import"./RadioGroup-d38bb948.js";import"./Scroll-8b329036.js";import"./Select-caf9dd88.js";import"./Spinner-397b9791.js";import"./StopClickPropagation-a6c84407.js";import"./Switch-1491a744.js";import"./TabbedNav-f25ad749.js";import"./Tag-3fbd2597.js";import"./Text-23aecd3e.js";import"./Toast-8e7c89be.js";import"./TextArea-fffc01e9.js";import"./ControlledTextInput-8b47e53a.js";import"./index-7c191284.js";import"./atoms-27ff9aca.js";/* empty css                              */import"./createRuntimeFn-f8e161c6.esm-526ef7c2.js";import"./Divider-afaaea7d.js";import"./index-7928010f.js";import"./index-ecbee218.js";import"./index-14f6abe2.js";import"./index-555f5aa0.js";import"./index-68f53824.js";import"./index-73913900.js";import"./WarningIcon-70ed10e0.js";import"./index-42006365.js";import"./motion-cc45ae8c.js";import"./index-686b454f.js";import"./NumericInput-9a609acc.js";import"./Progress-63435bcb.js";import"./index-3fa2a7da.js";import"./index-089b5fa1.js";import"./index-df712b54.js";import"./index-483e5ee9.js";import"./index-3f962b01.js";import"./index-686fc997.js";import"./Combination-94d08748.js";import"./index-a4cfa2c4.js";import"./Image-ba1145ce.js";import"./typography-f274f330.js";const gt={title:"Components/ThemeProvider",component:h},t=()=>{const{theme:e,setTheme:i}=l(),p=()=>{i(e==="light"?"dark":"light")};return s.jsx(a,{label:"Toggle theme",onClick:p})};var o,r,m;t.parameters={...t.parameters,docs:{...(o=t.parameters)==null?void 0:o.docs,source:{originalSource:`() => {
  const {
    theme,
    setTheme
  } = useTheme();
  const toggleTheme = () => {
    setTheme(theme === 'light' ? 'dark' : 'light');
  };
  return <Button label="Toggle theme" onClick={toggleTheme} />;
}`,...(m=(r=t.parameters)==null?void 0:r.docs)==null?void 0:m.source}}};const ut=["Default"];export{t as Default,ut as __namedExportsOrder,gt as default};
//# sourceMappingURL=ThemeProvider.stories-4546e9fa.js.map
