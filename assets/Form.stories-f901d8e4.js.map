{"version":3,"file":"Form.stories-f901d8e4.js","sources":["../../src/components/Form/Form.stories.tsx"],"sourcesContent":["import { Meta, StoryObj } from '@storybook/react';\nimport { Box } from '~/components/Box';\nimport { Button } from '~/components/Button';\nimport { ControlledCheckbox as Checkbox } from '~/components/Checkbox';\nimport { ControlledFileInput as FileInput } from '~/components/FileInput';\nimport { ControlledRadioGroup as RadioGroup } from '~/components/RadioGroup';\nimport { ControlledSelect as Select } from '~/components/Select';\nimport { ControlledSwitch as Switch } from '~/components/Switch';\nimport { Text } from '~/components/Text';\nimport { ControlledTextInput as TextInput } from '~/components/TextInput';\nimport { Form } from './Form';\nexport default ({\n  title: 'Forms/Form',\n  component: Form\n} as Meta<typeof Form>);\nconst selectOptions = [{\n  label: 'Option 1',\n  value: 'option-1'\n}, {\n  label: 'Option 2',\n  value: 'option-2'\n}, {\n  label: 'Option 3',\n  value: 'option-3'\n}];\ntype Story = StoryObj<typeof Form>;\nexport const Default: Story = {\n  render: ({\n    onSubmit,\n    ...args\n  }) => <Box background=\"backgroundSecondary\" borderRadius=\"md\" flexDirection=\"column\" gap=\"4\" padding=\"4\">\n      <Form defaultValues={{\n      firstName: ''\n    }} onSubmit={onSubmit} {...args}>\n        {({\n        control,\n        reset,\n        formState: {\n          errors\n        },\n        setValue\n      }) => <Box background=\"backgroundPrimary\" flexDirection=\"column\" gap=\"5\" padding=\"4\" borderRadius=\"xs\">\n            <TextInput control={control} label=\"First Name\" labelLocation=\"top\" name=\"firstName\" placeholder=\"Enter first name\" rules={{\n          required: 'First name is required'\n        }} />\n            {errors.firstName?.message && <Text color=\"negative\">{(errors.firstName.message as string)}</Text>}\n\n            <TextInput control={control} defaultValue=\"\" label=\"Last Name\" labelLocation=\"top\" name=\"lastName\" placeholder=\"Enter last name\" rules={{\n          required: 'Last name is required'\n        }} />\n            {errors.lastName?.message && <Text color=\"negative\">{(errors.lastName.message as string)}</Text>}\n\n            <FileInput defaultValue=\"\" control={control} label=\"File Input\" labelLocation=\"top\" name=\"fileInput\" onValueChange={(file: File | null) => setValue('fileInput', file)} rules={{\n          required: 'A file is required'\n        }} validExtensions={['images']} />\n            {errors.fileInput?.message && <Text color=\"negative\">{(errors.fileInput.message as string)}</Text>}\n\n            <Select control={control} defaultValue={selectOptions[0].value} label=\"Select Option\" labelLocation=\"top\" name=\"selectOption\" onValueChange={(value: string) => setValue('selectOption', value)} options={selectOptions} placeholder=\"Select an option\" rules={{\n          required: 'A selection is required'\n        }} />\n            {errors.selectOption?.message && <Text color=\"negative\">\n                {(errors.selectOption.message as string)}\n              </Text>}\n\n            <Switch control={control} name=\"switchOption\" onCheckedChange={(value: boolean) => setValue('switchOption', value)} defaultChecked={false} />\n\n            <Checkbox control={control} label=\"Checkbox Option\" labelLocation=\"right\" name=\"checkboxOption\" onCheckedChange={(value: boolean) => setValue('checkboxOption', value)} defaultChecked={false} />\n\n            <RadioGroup control={control} defaultValue={selectOptions[0].value} flexDirection=\"row\" gap=\"4\" onValueChange={(value: string) => setValue('radioOption', value)} options={selectOptions} name=\"radioOption\" />\n\n            <Box flexDirection=\"row-reverse\" marginTop=\"2\" gap=\"2\">\n              <Button type=\"submit\" label=\"Submit\" variant=\"primary\" />\n              <Button type=\"reset\" label=\"Reset\" onClick={() => reset()} />\n            </Box>\n          </Box>}\n      </Form>\n    </Box>,\n  args: {\n    onSubmit: (data: {}) => console.log(data)\n  }\n};\nDefault.parameters = {\n  ...Default.parameters,\n  storySource: {\n    source: \"{\\n  render: ({\\n    onSubmit,\\n    ...args\\n  }) => <Box background=\\\"backgroundSecondary\\\" borderRadius=\\\"md\\\" flexDirection=\\\"column\\\" gap=\\\"4\\\" padding=\\\"4\\\">\\n      <Form defaultValues={{\\n      firstName: ''\\n    }} onSubmit={onSubmit} {...args}>\\n        {({\\n        control,\\n        reset,\\n        formState: {\\n          errors\\n        },\\n        setValue\\n      }) => <Box background=\\\"backgroundPrimary\\\" flexDirection=\\\"column\\\" gap=\\\"5\\\" padding=\\\"4\\\" borderRadius=\\\"xs\\\">\\n            <TextInput control={control} label=\\\"First Name\\\" labelLocation=\\\"top\\\" name=\\\"firstName\\\" placeholder=\\\"Enter first name\\\" rules={{\\n          required: 'First name is required'\\n        }} />\\n            {errors.firstName?.message && <Text color=\\\"negative\\\">{(errors.firstName.message as string)}</Text>}\\n\\n            <TextInput control={control} defaultValue=\\\"\\\" label=\\\"Last Name\\\" labelLocation=\\\"top\\\" name=\\\"lastName\\\" placeholder=\\\"Enter last name\\\" rules={{\\n          required: 'Last name is required'\\n        }} />\\n            {errors.lastName?.message && <Text color=\\\"negative\\\">{(errors.lastName.message as string)}</Text>}\\n\\n            <FileInput defaultValue=\\\"\\\" control={control} label=\\\"File Input\\\" labelLocation=\\\"top\\\" name=\\\"fileInput\\\" onValueChange={(file: File | null) => setValue('fileInput', file)} rules={{\\n          required: 'A file is required'\\n        }} validExtensions={['images']} />\\n            {errors.fileInput?.message && <Text color=\\\"negative\\\">{(errors.fileInput.message as string)}</Text>}\\n\\n            <Select control={control} defaultValue={selectOptions[0].value} label=\\\"Select Option\\\" labelLocation=\\\"top\\\" name=\\\"selectOption\\\" onValueChange={(value: string) => setValue('selectOption', value)} options={selectOptions} placeholder=\\\"Select an option\\\" rules={{\\n          required: 'A selection is required'\\n        }} />\\n            {errors.selectOption?.message && <Text color=\\\"negative\\\">\\n                {(errors.selectOption.message as string)}\\n              </Text>}\\n\\n            <Switch control={control} name=\\\"switchOption\\\" onCheckedChange={(value: boolean) => setValue('switchOption', value)} defaultChecked={false} />\\n\\n            <Checkbox control={control} label=\\\"Checkbox Option\\\" labelLocation=\\\"right\\\" name=\\\"checkboxOption\\\" onCheckedChange={(value: boolean) => setValue('checkboxOption', value)} defaultChecked={false} />\\n\\n            <RadioGroup control={control} defaultValue={selectOptions[0].value} flexDirection=\\\"row\\\" gap=\\\"4\\\" onValueChange={(value: string) => setValue('radioOption', value)} options={selectOptions} name=\\\"radioOption\\\" />\\n\\n            <Box flexDirection=\\\"row-reverse\\\" marginTop=\\\"2\\\" gap=\\\"2\\\">\\n              <Button type=\\\"submit\\\" label=\\\"Submit\\\" variant=\\\"primary\\\" />\\n              <Button type=\\\"reset\\\" label=\\\"Reset\\\" onClick={() => reset()} />\\n            </Box>\\n          </Box>}\\n      </Form>\\n    </Box>,\\n  args: {\\n    onSubmit: (data: {}) => console.log(data)\\n  }\\n}\",\n    ...Default.parameters?.storySource\n  }\n};"],"names":["Form_stories","Form","selectOptions","Default","onSubmit","args","jsx","Box","control","reset","errors","setValue","jsxs","TextInput","_a","Text","_b","FileInput","file","_c","Select","value","_d","Switch","Checkbox","RadioGroup","Button","data"],"mappings":"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"}