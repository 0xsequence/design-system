var d=Object.defineProperty;var a=(p,e)=>d(p,"name",{value:e,configurable:!0});import"./jsx-runtime.28cad7fd.js";import{c as t,A as x,M as y}from"./Props.f1956d1f.js";import"./iframe.81503504.js";import"./Avatar.b7a4ff74.js";import"./Badge.4c0dc556.js";import"./Box.f9cdeb38.js";import"./Button.7796fd46.js";/* empty css                             *//* empty css                              */import"./Collapsible.d743ea51.js";import"./ControlledTextInput.6ed9c5e2.js";import"./Group.ed1bb5f8.js";import"./IconButton.5ff780f5.js";import"./LabelledField.0844313a.js";import"./Modal.c5bcc6b5.js";import"./Row.c7e609aa.js";import"./Spinner.295b93b3.js";import"./Stack.0e006ba6.js";import"./Switch.3ec0e37e.js";import"./Tabs.011225d7.js";import"./TabbedNav.1f769ab6.js";import"./Tag.ab8e4ed6.js";import{T as o}from"./Text.02da61b4.js";import"./TextInput.64811e4e.js";import"./ThemeProvider.7c72fb21.js";import"./TokenImage.093706b6.js";import"./Tooltip.d309602b.js";import"./string.eb7311b7.js";import"./index.2b930d2b.js";import"./es.map.constructor.3286b14c.js";import"./es.number.to-fixed.4d85e23f.js";import"./index.3f9518bc.js";import"./vanilla-extract-recipes-createRuntimeFn.esm.e63f122f.js";import"./atoms.css.b06098ab.js";import"./index.module.a0874b05.js";import"./index.a3fc1b9c.js";import"./index.module.35a9c2ad.js";import"./index.module.4028744a.js";import"./WarningIcon.6877fe9b.js";import"./index.c63f56c3.js";import"./tslib.es6.03b483f6.js";import"./index.module.62986b43.js";import"./index.37ca15f1.js";import"./index.module.8904e771.js";import"./index.module.7a2511d7.js";import"./index.module.d16e3af0.js";import"./index.module.cdb74eff.js";function s(){return s=Object.assign?Object.assign.bind():function(p){for(var e=1;e<arguments.length;e++){var n=arguments[e];for(var i in n)Object.prototype.hasOwnProperty.call(n,i)&&(p[i]=n[i])}return p},s.apply(this,arguments)}a(s,"_extends");const r="The quick brown fox jumps over the lazy dog",u={sampleText:r},g="wrapper";function l({components:p,...e}){return t(g,s({},u,e,{components:p,mdxType:"MDXLayout"}),t(y,{title:"Design System/Typography",mdxType:"Meta"}),t("h1",null,"Typography"),t("p",null,"The defined set of typefaces and used in the design system."),t("p",null,t("strong",{parentName:"p"},"xlarge")),t(o,{variant:"xlarge",mdxType:"Text"},r),t("p",null,t("strong",{parentName:"p"},"large")),t(o,{variant:"large",mdxType:"Text"},r),t("p",null,t("strong",{parentName:"p"},"medium")),t(o,{variant:"medium",mdxType:"Text"},r),t("p",null,t("strong",{parentName:"p"},"normal")),t(o,{variant:"normal",mdxType:"Text"},r),t("p",null,t("strong",{parentName:"p"},"small")),t(o,{variant:"small",mdxType:"Text"},r),t("p",null,t("strong",{parentName:"p"},"xsmall")),t(o,{variant:"xsmall",mdxType:"Text"},r),t("p",null,t("strong",{parentName:"p"},"code")),t(o,{variant:"code",mdxType:"Text"},r))}a(l,"MDXContent");l.isMDXComponent=!0;const T=a(()=>{throw new Error("Docs-only story")},"__page");T.parameters={docsOnly:!0};const m={title:"Design System/Typography",includeStories:["__page"]},c={};m.parameters=m.parameters||{};m.parameters.docs={...m.parameters.docs||{},page:()=>t(x,{mdxStoryNameToKey:c,mdxComponentAnnotations:m},t(l,null))};const xt=["sampleText","__page"];export{xt as __namedExportsOrder,T as __page,m as default,r as sampleText};
//# sourceMappingURL=Typography.stories.67abad9b.js.map
