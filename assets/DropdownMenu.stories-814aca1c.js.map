{"version":3,"file":"DropdownMenu.stories-814aca1c.js","sources":["../../src/components/DropdownMenu/DropdownMenu.stories.tsx"],"sourcesContent":["import { StoryObj, Meta } from '@storybook/react';\nimport { useState } from 'react';\nimport { ContextMenuIcon } from '~/icons';\nimport { Box } from '../Box';\nimport { IconButton } from '../IconButton';\nimport { DropdownMenuCheckboxItem, DropdownMenuContent, DropdownMenuItem, DropdownMenuRoot, DropdownMenuTrigger, DropdownMenuSeparator, DropdownMenuRadioItem, DropdownMenuRadioGroup } from './DropdownMenu';\nexport default ({\n  title: 'Components/DropdownMenu'\n} as Meta<any>);\ntype Story = StoryObj<any>;\nconst StoryWrapper = () => {\n  const [showBookmarks, setShowBookmarks] = useState(true);\n  const [showFullURLs, setShowFullURLs] = useState(false);\n  const [mode, setMode] = useState<'list' | 'grid'>('list');\n  return <Box justifyContent=\"center\">\n      <DropdownMenuRoot>\n        <DropdownMenuTrigger asChild>\n          <IconButton icon={ContextMenuIcon} />\n        </DropdownMenuTrigger>\n        <DropdownMenuContent>\n          <DropdownMenuItem>New Tab</DropdownMenuItem>\n          <DropdownMenuItem>New Window</DropdownMenuItem>\n          <DropdownMenuItem disabled>New Private Tab</DropdownMenuItem>\n          <DropdownMenuItem>Item 4</DropdownMenuItem>\n          <DropdownMenuItem>Item 5</DropdownMenuItem>\n\n          <DropdownMenuSeparator />\n\n          <DropdownMenuCheckboxItem checked={showBookmarks} onCheckedChange={value => setShowBookmarks(!!value)}>\n            Show Bookmarks\n          </DropdownMenuCheckboxItem>\n          <DropdownMenuCheckboxItem checked={showFullURLs} onCheckedChange={value => setShowFullURLs(!!value)}>\n            Show Full URLs\n          </DropdownMenuCheckboxItem>\n\n          <DropdownMenuSeparator />\n\n          <DropdownMenuRadioGroup value={mode} onValueChange={value => setMode((value as any))}>\n            <DropdownMenuRadioItem value=\"list\">List</DropdownMenuRadioItem>\n            <DropdownMenuRadioItem value=\"grid\">Grid</DropdownMenuRadioItem>\n          </DropdownMenuRadioGroup>\n        </DropdownMenuContent>\n      </DropdownMenuRoot>\n    </Box>;\n};\nexport const Default: Story = {\n  render: StoryWrapper,\n  args: {}\n};\nDefault.parameters = {\n  ...Default.parameters,\n  storySource: {\n    source: \"{\\n  render: StoryWrapper,\\n  args: {}\\n}\",\n    ...Default.parameters?.storySource\n  }\n};"],"names":["DropdownMenu_stories","StoryWrapper","showBookmarks","setShowBookmarks","useState","showFullURLs","setShowFullURLs","mode","setMode","jsx","Box","DropdownMenuRoot","DropdownMenuTrigger","IconButton","ContextMenuIcon","DropdownMenuContent","DropdownMenuItem","DropdownMenuSeparator","DropdownMenuCheckboxItem","value","jsxs","DropdownMenuRadioGroup","DropdownMenuRadioItem","Default","_a"],"mappings":"0/BAMA,MAAgBA,EAAA,CACd,MAAO,yBACT,EAEMC,EAAe,IAAM,CACzB,KAAM,CAACC,EAAeC,CAAgB,EAAIC,WAAS,EAAI,EACjD,CAACC,EAAcC,CAAe,EAAIF,WAAS,EAAK,EAChD,CAACG,EAAMC,CAAO,EAAIJ,WAA0B,MAAM,EACxD,OAAQK,EAAAC,EAAA,CAAI,eAAe,SACvB,WAACC,EACC,CAAA,SAAA,CAAAF,EAACG,GAAoB,QAAO,GAC1B,WAACC,EAAW,CAAA,KAAMC,EAAiB,CACrC,CAAA,IACCC,EACC,CAAA,SAAA,CAAAN,EAACO,GAAiB,SAAO,SAAA,CAAA,EACzBP,EAACO,GAAiB,SAAU,YAAA,CAAA,EAC3BP,EAAAO,EAAA,CAAiB,SAAQ,GAAC,SAAe,kBAAA,EAC1CP,EAACO,GAAiB,SAAM,QAAA,CAAA,EACxBP,EAACO,GAAiB,SAAM,QAAA,CAAA,IAEvBC,EAAsB,EAAA,EAEvBR,EAACS,EAAyB,CAAA,QAAShB,EAAe,gBAA0BiB,GAAAhB,EAAiB,CAAC,CAACgB,CAAK,EAAG,SAEvG,gBAAA,CAAA,EACAV,EAACS,EAAyB,CAAA,QAASb,EAAc,gBAA0Bc,GAAAb,EAAgB,CAAC,CAACa,CAAK,EAAG,SAErG,gBAAA,CAAA,IAECF,EAAsB,EAAA,EAEvBG,EAACC,GAAuB,MAAOd,EAAM,cAAwBY,GAAAX,EAASW,CAAa,EACjF,SAAA,CAACV,EAAAa,EAAA,CAAsB,MAAM,OAAO,SAAI,OAAA,EACvCb,EAAAa,EAAA,CAAsB,MAAM,OAAO,SAAI,OAAA,CAAA,EAC1C,CAAA,EACF,CAAA,CACF,CAAA,CACF,CAAA,CACJ,EACaC,EAAiB,CAC5B,OAAQtB,EACR,KAAM,CAAC,CACT,QACAsB,EAAQ,WAAa,CACnB,GAAGA,EAAQ,WACX,YAAa,CACX,OAAQ;AAAA;AAAA;AAAA,GACR,IAAGC,EAAAD,EAAQ,aAAR,YAAAC,EAAoB,WACzB,CACF"}