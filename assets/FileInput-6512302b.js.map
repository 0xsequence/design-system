{"version":3,"file":"FileInput-6512302b.js","sources":["../../src/hooks/useCombinedRefs.ts","../../src/components/FileInput/FileInput.tsx"],"sourcesContent":["import { Ref } from 'react'\n\n/**\n * Combines multiple refs into one\n * @param refs\n * @returns\n */\nexport const useCombinedRefs =\n  (...refs: Array<Ref<any>>): Ref<any> =>\n  (element: any) =>\n    refs.forEach(ref => {\n      if (!ref) {\n        return\n      }\n\n      if (typeof ref === 'function') {\n        ref(element)\n      } else {\n        ;(ref as any).current = element\n      }\n    })\n","import { ChangeEvent, ElementType, forwardRef, useRef, useState } from 'react'\n\nimport {\n  Box,\n  PolymorphicComponent,\n  PolymorphicProps,\n  PolymorphicRef,\n} from '~/components/Box'\nimport { IconButton } from '~/components/IconButton'\nimport {\n  HasLabel,\n  HiddenLabel,\n  LabelledField,\n} from '~/components/LabelledField'\nimport { Text } from '~/components/Text'\nimport { useCombinedRefs } from '~/hooks/useCombinedRefs'\nimport { CloseIcon } from '~/icons'\n\nimport * as styles from './styles.css'\n\nconst MIME_TYPES = {\n  png: '.png,image/png',\n  jpeg: '.jpeg,image/jpeg',\n  jpg: '.jpg,image/jpg',\n  images: 'image/*',\n  pdf: '.pdf,application/pdf',\n}\n\ntype AllowedMimeTypes = keyof typeof MIME_TYPES\n\ntype FileData = {\n  name: string\n  size: number\n  extension: string\n}\n\nexport type FileInputProps = (HasLabel | HiddenLabel) & {\n  description?: string\n  disabled?: boolean\n  name: string\n  processing?: boolean\n  validExtensions: AllowedMimeTypes[]\n  value?: File\n  onValueChange?: (value: File | null) => void\n}\n\nexport const FileInput: PolymorphicComponent<FileInputProps, 'input'> =\n  forwardRef(\n    <T extends ElementType>(\n      {\n        description,\n        disabled = false,\n        id,\n        label = '',\n        labelLocation = 'hidden',\n        name,\n        onValueChange,\n        placeholder = 'Upload a file',\n        processing = false,\n        validExtensions,\n        ...rest\n      }: PolymorphicProps<FileInputProps, T>,\n      ref: PolymorphicRef<T>\n    ) => {\n      const inputRef = useRef<HTMLInputElement>(null)\n      const combinedRef = useCombinedRefs(inputRef, ref)\n      const [fileData, setFileData] = useState<FileData | null>(null)\n\n      const handleChange = (e: ChangeEvent<HTMLInputElement>) => {\n        const filelist = e.currentTarget.files as FileList\n        if (!filelist || !filelist[0]) {\n          return\n        }\n\n        const file = filelist[0]\n        const filename = file.name\n        const filesize = file.size / 1000\n\n        setFileData({\n          name: filename,\n          size: filesize,\n          extension: filename.split('.').pop() ?? '',\n        })\n\n        onValueChange?.(file)\n      }\n\n      const accept = validExtensions.map(ext => MIME_TYPES[ext]).join(',')\n\n      return (\n        <LabelledField\n          description={description}\n          disabled={disabled}\n          display=\"grid\"\n          forId={id ?? name}\n          label={label}\n          labelLocation={labelLocation}\n        >\n          <Box width=\"full\">\n            <Box\n              justifyContent={fileData ? 'space-between' : 'flex-start'}\n              color={fileData ? 'text100' : 'text50'}\n              className={styles.wrap}\n            >\n              {fileData ? (\n                <Box flexDirection=\"row\" gap=\"2\" alignItems=\"baseline\">\n                  <Text>{fileData.name}</Text>\n                  <Text color=\"text50\" variant=\"xsmall\">\n                    {fileData.size.toFixed(2)} kb\n                  </Text>\n                </Box>\n              ) : (\n                <Text>{placeholder}</Text>\n              )}\n\n              <Box\n                accept={accept}\n                as=\"input\"\n                className={styles.input}\n                cursor={fileData ? 'text' : 'pointer'}\n                disabled={disabled || processing || !!fileData}\n                id={id ?? name}\n                name={name}\n                onChange={handleChange}\n                ref={combinedRef}\n                type=\"file\"\n                {...rest}\n              />\n\n              {fileData && (\n                <IconButton\n                  cursor=\"pointer\"\n                  icon={CloseIcon}\n                  size=\"xs\"\n                  onClick={e => {\n                    e.preventDefault()\n                    e.stopPropagation()\n\n                    inputRef.current?.value && (inputRef.current.value = '')\n\n                    onValueChange?.(null)\n                    setFileData(null)\n                  }}\n                  zIndex=\"10\"\n                />\n              )}\n            </Box>\n          </Box>\n        </LabelledField>\n      )\n    }\n  )\n"],"names":["useCombinedRefs","__name","refs","element","ref","MIME_TYPES","FileInput","forwardRef","description","id","labelLocation","name","onValueChange","processing","validExtensions","inputRef","useRef","combinedRef","fileData","setFileData","useState","handleChange","e","filelist","file","filename","filesize","accept","ext","_jsx","LabelledField","disabled","Box","_jsxs","styles.wrap","wrap","Text","placeholder","styles.input","input","rest","CloseIcon"],"mappings":"2dAOO,MAAMA,EACXC,EAAA,IAAIC,IACHC,GACCD,EAAK,QAAeE,GAAA,CACbA,IAID,OAAOA,GAAQ,WACjBA,EAAID,CAAO,EAETC,EAAY,QAAUD,EAE5B,CAAC,EAZH,kZCYF,MAAAE,EAAA,CAAmB,IAAA,iBACZ,KAAA,mBACC,IAAA,iBACD,OAAA,UACG,IAAA,sBAEV,EAoBOC,EAAAC,EAAA,QAAA,WAAA,CAAA,CAGD,YAAAC,EACEA,SAAAA,EAAAA,GACW,GAAAC,EACXA,MAAAA,EAAAA,GACQ,cAAAC,EAAA,SACQ,KAAAC,EAChBA,cAAAA,EACAC,YAAAA,EAAAA,gBACc,WAAAC,EAAA,GACD,gBAAAC,KACbA,CAEmC,EAAAV,IAAA,CAGrC,MAAAW,EAAAC,iBAAA,IAAA,EACAC,EAAAjB,EAAAe,EAAAX,CAAA,EACA,CAAAc,EAAAC,CAAA,EAAAC,EAAA,QAAA,SAAA,IAAA,EAEAC,EAAApB,EAAAqB,GAAA,CACE,MAAAC,EAAAD,EAAA,cAAA,MACA,GAAA,CAAAC,GAAA,CAAAA,EAAA,GACE,OAGF,MAAAC,EAAAD,EAAA,GACAE,EAAAD,EAAA,KACAE,EAAAF,EAAA,KAAA,IAEAL,EAAAA,CAAY,KAAAM,EACJA,KAAAA,EACAC,UAAAA,EAAAA,MAAAA,GAAAA,EAAAA,IAAAA,GAAAA,EACkC,CAAA,EAG1Cd,GAAAA,MAAAA,EAAAA,EAAoB,EAhBtB,gBAmBAe,EAAAb,EAAA,IAAAc,GAAAvB,EAAAuB,EAAA,EAAA,KAAA,GAAA,EAEA,OAAAC,EAAAC,EAAA,CACgB,YAAAtB,EACZ,SAAAuB,EACA,QAAA,OACQ,MAAAtB,GAAAE,EACKA,MAAAA,EACb,cAAAD,EACA,SAAAmB,EAAAG,EAAA,CAEI,MAAA,OAAO,SAAAC,EAAAD,EAAA,CACL,eAAAd,EAAA,gBAAA,aAC2C,MAAAA,EAAA,UAAA,SACf,UAAAgB,EACZC,SAAAA,CAAAA,EAAAA,EAAAA,EAAAA,CAGZ,cAAA,MAAe,IAAA,IAAU,WAAA,WAAe,SAAA,CAAAN,EAAAO,EAAA,CACrC,SAAAlB,EAAA,IAAWP,CAAAA,EAAAA,EAAAA,EAAAA,CACX,MAAA,SAAO,QAAA,SAAiB,SAAA,CAAAO,EAAA,KAAA,QAAA,CAAA,EAAA,KAAA,CACF,CAAA,CAAA,CACpB,CAAA,EAAAW,EAAAO,EAAA,CAGJ,SAAAC,CAAEA,CAAAA,EAAAA,EAAAA,EAAAA,CAGL,OAAAV,EACF,GAAA,QACG,UAAAW,EACeC,OAAAA,EAAAA,OAAAA,UACU,SAAAR,GAAAlB,GAAA,CAAA,CAAAK,EACUA,GAAAA,GAAAA,EAC5BP,KAAAA,EACV,SAAAU,EACUA,IAAAA,EACLJ,KAAAA,OACA,GAAAuB,CACDA,CAAAA,EAAAA,GAAAA,EAAAA,EAAAA,CAIO,OAAA,UACF,KAAAC,EACDA,KAAAA,KACD,QAAAnB,GAAA,OAEHA,EAAAA,eAAAA,EACAA,EAAAA,gBAAAA,GAEAP,EAAAA,EAAAA,UAAAA,MAAAA,EAAAA,QAAAA,EAAAA,QAAAA,MAAAA,IAEAH,GAAAA,MAAAA,EAAAA,MACAO,EAAAA,IAAAA,CAAgB,EAClB,OAAA,IACO,CAAA,CAAA,CAEV,CAAA,CAAA,CAAA,CACG,CAAA,CAId,CAAA"}