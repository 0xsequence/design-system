import{j as e}from"./jsx-runtime-a9c13c85.js";import"./Box-b0120ac5.js";import"./Avatar-74656c69.js";import"./Badge-4dd5995d.js";import"./Breadcrumbs-2d599f3a.js";import{B as i}from"./Button-2d497171.js";import"./atoms.css-e2b24766.js";/* empty css                              */import"./Card-4ea73e7a.js";import"./Checkbox-51e35d34.js";import"./ControlledSwitch-23d7f919.js";import{T as p,u as s}from"./Tooltip-56963269.js";import"./index-be2c0e86.js";import"./DropdownMenu-859d4ed4.js";import"./FileInput-e314353d.js";import"./Field-f1a80f42.js";import"./IconButton-3422329c.js";import"./TokenImage-a45c6629.js";import"./Modal-824b0c3f.js";import"./RadioGroup-b60070a0.js";import"./Scroll-2b1ce54b.js";import"./Select-24dedfae.js";import"./Spinner-3b6aca7a.js";import"./StopClickPropagation-f7b013a9.js";import"./Switch-23bf3957.js";import"./TabbedNav-98f31162.js";import"./Tag-06d23018.js";import"./Text-eabff90a.js";import"./ControlledTextInput-bbdfce14.js";import"./index-d8ade8ea.js";import"./_commonjsHelpers-042e6b4d.js";import"./index-4d501b15.js";import"./vanilla-extract-recipes-createRuntimeFn.esm-d30eb010.js";import"./Divider-0fb86a7f.js";import"./extends-98964cd2.js";import"./index.module-d15610cf.js";import"./index-ffd4619b.js";import"./index.module-e6a6661a.js";import"./index.module-45828978.js";import"./index.module-732cca0e.js";import"./WarningIcon-588196bf.js";import"./index.module-a9b21657.js";import"./motion-7df5a7b3.js";import"./NumericInput-9ce685be.js";import"./index.module-3bb41f79.js";import"./index.module-8c7796ea.js";import"./Combination-78ef0d5c.js";import"./index.module-b2b96eed.js";import"./index.module-f17d4a85.js";import"./Image-73e12236.js";import"./index-807b81f6.js";import"./typography-f274f330.js";const st={title:"Components/ThemeProvider",component:p},t=()=>{const{theme:r,setTheme:m}=s();return e(i,{label:"Toggle theme",onClick:()=>{m(r==="light"?"dark":"light")}})};var o;t.parameters={...t.parameters,storySource:{source:`() => {
  const {
    theme,
    setTheme
  } = useTheme();
  const toggleTheme = () => {
    setTheme(theme === 'light' ? 'dark' : 'light');
  };
  return <Button label="Toggle theme" onClick={toggleTheme} />;
}`,...(o=t.parameters)==null?void 0:o.storySource}};const ht=["Default"];export{t as Default,ht as __namedExportsOrder,st as default};
//# sourceMappingURL=ThemeProvider.stories-400d2589.js.map
