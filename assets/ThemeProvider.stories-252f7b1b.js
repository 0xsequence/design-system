import{j as e}from"./jsx-runtime-a9c13c85.js";import"./Box-71460fdd.js";import"./Avatar-d122d221.js";import"./Badge-92d2755f.js";import"./Breadcrumbs-fb085f15.js";import{B as i}from"./Button-8adb6abb.js";import"./atoms.css-afddc020.js";/* empty css                              */import"./Card-7e8c0409.js";import"./Checkbox-5a69758f.js";import"./ControlledSwitch-fd5afc62.js";import{T as p,u as s}from"./Tooltip-c5374ca0.js";import"./index-aacf97be.js";import"./DropdownMenu-54986054.js";import"./FileInput-8faffedc.js";import"./Field-2edc6e2f.js";import"./IconButton-2fef59d9.js";import"./TokenImage-89f7d879.js";import"./Modal-98c7167a.js";import"./RadioGroup-0d95fd5a.js";import"./Scroll-f849ceca.js";import"./Select-bae0eec2.js";import"./Spinner-a04ff1aa.js";import"./StopClickPropagation-30c60ee4.js";import"./Switch-dda6bb9d.js";import"./TabbedNav-81d5a752.js";import"./Tag-25df6d88.js";import"./Text-33c21de8.js";import"./ControlledTextInput-769ec937.js";import"./index-d8ade8ea.js";import"./_commonjsHelpers-042e6b4d.js";import"./index-4d501b15.js";import"./vanilla-extract-recipes-createRuntimeFn.esm-d30eb010.js";import"./Divider-91abf20b.js";import"./extends-98964cd2.js";import"./index.module-d15610cf.js";import"./index-ffd4619b.js";import"./index.module-e6a6661a.js";import"./index.module-45828978.js";import"./index.module-732cca0e.js";import"./WarningIcon-e965e419.js";import"./index.module-a9b21657.js";import"./motion-7df5a7b3.js";import"./NumericInput-c4d70df1.js";import"./index.module-3bb41f79.js";import"./index.module-8c7796ea.js";import"./Combination-78ef0d5c.js";import"./index.module-b2b96eed.js";import"./index.module-f17d4a85.js";import"./Image-d41e85a0.js";import"./index-807b81f6.js";import"./typography-f274f330.js";const st={title:"Components/ThemeProvider",component:p},t=()=>{const{theme:r,setTheme:m}=s();return e(i,{label:"Toggle theme",onClick:()=>{m(r==="light"?"dark":"light")}})};var o;t.parameters={...t.parameters,storySource:{source:`() => {
  const {
    theme,
    setTheme
  } = useTheme();
  const toggleTheme = () => {
    setTheme(theme === 'light' ? 'dark' : 'light');
  };
  return <Button label="Toggle theme" onClick={toggleTheme} />;
}`,...(o=t.parameters)==null?void 0:o.storySource}};const ht=["Default"];export{t as Default,ht as __namedExportsOrder,st as default};
//# sourceMappingURL=ThemeProvider.stories-252f7b1b.js.map
