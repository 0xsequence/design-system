var d=Object.defineProperty;var a=(p,e)=>d(p,"name",{value:e,configurable:!0});import"./jsx-runtime.41e417f8.js";import{c as t,A as x,M as y}from"./Props.a6f26bf8.js";import"./iframe.c2f87c82.js";import"./Avatar.c3dbd467.js";import"./Badge.f4bbacea.js";import"./Box.86996807.js";import"./Button.00d663a8.js";/* empty css                             *//* empty css                              */import"./Collapsible.ec0ea952.js";import"./ControlledTextInput.9def0acd.js";import"./Group.fd7ae060.js";import"./IconButton.2f571c85.js";import"./LabelledField.a15296fc.js";import"./Modal.87fea9d6.js";import"./Row.c077fa73.js";import"./Spinner.ec70b103.js";import"./Stack.eb9be3ee.js";import"./Switch.13fa32cc.js";import"./Tabs.5f7d21a2.js";import"./TabbedNav.8e1163ac.js";import"./Tag.61fca279.js";import{T as o}from"./Text.3db88a83.js";import"./TextInput.33bf9c8e.js";import"./ThemeProvider.d1c90f8f.js";import"./TokenImage.b949fb71.js";import"./Tooltip.46c36c07.js";import"./string.b61b04f0.js";import"./index.ecf71df8.js";import"./es.map.constructor.422eb492.js";import"./es.number.to-fixed.f1532aa6.js";import"./index.3f9518bc.js";import"./vanilla-extract-recipes-createRuntimeFn.esm.e63f122f.js";import"./atoms.css.b06098ab.js";import"./index.module.4b837a62.js";import"./index.725e758c.js";import"./index.module.45b4929f.js";import"./index.module.50a678d0.js";import"./WarningIcon.ec389682.js";import"./index.7d5503a2.js";import"./tslib.es6.03b483f6.js";import"./index.module.7e8d08bd.js";import"./index.347d34d3.js";import"./index.module.b18be926.js";import"./index.module.5ad6a428.js";import"./index.module.8ada519e.js";import"./index.module.ad388aa7.js";function s(){return s=Object.assign?Object.assign.bind():function(p){for(var e=1;e<arguments.length;e++){var n=arguments[e];for(var i in n)Object.prototype.hasOwnProperty.call(n,i)&&(p[i]=n[i])}return p},s.apply(this,arguments)}a(s,"_extends");const r="The quick brown fox jumps over the lazy dog",u={sampleText:r},g="wrapper";function l({components:p,...e}){return t(g,s({},u,e,{components:p,mdxType:"MDXLayout"}),t(y,{title:"Design System/Typography",mdxType:"Meta"}),t("h1",null,"Typography"),t("p",null,"The defined set of typefaces and used in the design system."),t("p",null,t("strong",{parentName:"p"},"xlarge")),t(o,{variant:"xlarge",mdxType:"Text"},r),t("p",null,t("strong",{parentName:"p"},"large")),t(o,{variant:"large",mdxType:"Text"},r),t("p",null,t("strong",{parentName:"p"},"medium")),t(o,{variant:"medium",mdxType:"Text"},r),t("p",null,t("strong",{parentName:"p"},"normal")),t(o,{variant:"normal",mdxType:"Text"},r),t("p",null,t("strong",{parentName:"p"},"small")),t(o,{variant:"small",mdxType:"Text"},r),t("p",null,t("strong",{parentName:"p"},"xsmall")),t(o,{variant:"xsmall",mdxType:"Text"},r),t("p",null,t("strong",{parentName:"p"},"code")),t(o,{variant:"code",mdxType:"Text"},r))}a(l,"MDXContent");l.isMDXComponent=!0;const T=a(()=>{throw new Error("Docs-only story")},"__page");T.parameters={docsOnly:!0};const m={title:"Design System/Typography",includeStories:["__page"]},c={};m.parameters=m.parameters||{};m.parameters.docs={...m.parameters.docs||{},page:()=>t(x,{mdxStoryNameToKey:c,mdxComponentAnnotations:m},t(l,null))};const xt=["sampleText","__page"];export{xt as __namedExportsOrder,T as __page,m as default,r as sampleText};
//# sourceMappingURL=Typography.stories.d256a15d.js.map
