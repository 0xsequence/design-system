{"version":3,"file":"Box.e6e00a73.js","sources":["../../node_modules/clsx/dist/clsx.m.js","../../src/components/Box/Box.tsx"],"sourcesContent":["function r(e){var t,f,n=\"\";if(\"string\"==typeof e||\"number\"==typeof e)n+=e;else if(\"object\"==typeof e)if(Array.isArray(e))for(t=0;t<e.length;t++)e[t]&&(f=r(e[t]))&&(n&&(n+=\" \"),n+=f);else for(t in e)e[t]&&(n&&(n+=\" \"),n+=t);return n}export function clsx(){for(var e,t,f=0,n=\"\";f<arguments.length;)(e=arguments[f++])&&(t=r(e))&&(n&&(n+=\" \"),n+=t);return n}export default clsx;","import { clsx } from 'clsx'\nimport {\n  createElement,\n  ElementType,\n  ReactElement,\n  forwardRef,\n  Ref,\n  ComponentPropsWithRef,\n  ComponentPropsWithoutRef,\n} from 'react'\n\nimport { atoms, Atoms } from '~/css'\n\nexport type BoxProps<T extends ElementType = 'div'> =\n  ComponentPropsWithoutRef<T> & {\n    as?: T\n    ref?: ComponentPropsWithRef<T>['ref'] | null\n  } & Atoms\n\nexport type PolymorphicProps<P, T extends ElementType> = P & BoxProps<T>\n\nexport type PolymorphicComponent<P, D extends ElementType = 'div'> = <\n  T extends ElementType = D\n>(\n  props: PolymorphicProps<P, T>\n) => ReactElement | null\n\nexport type PolymorphicRef<T extends ElementType = 'div'> = BoxProps<T>['ref']\n\nconst FLEX_PROPS = [\n  'alignItems',\n  'alignSelf',\n  'flexDirection',\n  'gap',\n  'justifyContent',\n  'justifySelf',\n]\n\nexport const Box: PolymorphicComponent<{}, 'div'> = forwardRef(\n  <T extends ElementType>(props: BoxProps<T>, ref: Ref<HTMLElement>) => {\n    const { as = 'div', className, ...restProps } = props\n    const atomProps: Record<string, unknown> = {}\n    const nativeProps: Record<string, unknown> = {}\n\n    for (const key in restProps) {\n      if (atoms.properties.has(key as keyof Atoms)) {\n        atomProps[key] = restProps[key as keyof typeof restProps]\n      } else {\n        nativeProps[key] = restProps[key as keyof typeof restProps]\n      }\n    }\n\n    atomProps.display ||= Object.keys(atomProps).some(k =>\n      FLEX_PROPS.includes(k)\n    )\n      ? 'flex'\n      : undefined\n\n    const atomicClasses = atoms({\n      ...atomProps,\n    })\n\n    return createElement(as, {\n      className: clsx(atomicClasses, className),\n      ...nativeProps,\n      ref,\n    })\n  }\n)\n"],"names":["r","e","f","n","__name","clsx","FLEX_PROPS","Box","forwardRef","props","ref","as","className","restProps","atomProps","nativeProps","key","atoms","atomicClasses","createElement"],"mappings":"oNAAA,SAASA,EAAEC,EAAE,CAAC,IAAI,EAAEC,EAAEC,EAAE,GAAG,GAAa,OAAOF,GAAjB,UAA8B,OAAOA,GAAjB,SAAmBE,GAAGF,UAAoB,OAAOA,GAAjB,SAAmB,GAAG,MAAM,QAAQA,CAAC,EAAE,IAAI,EAAE,EAAE,EAAEA,EAAE,OAAO,IAAIA,EAAE,KAAKC,EAAEF,EAAEC,EAAE,EAAE,KAAKE,IAAIA,GAAG,KAAKA,GAAGD,OAAQ,KAAI,KAAKD,EAAEA,EAAE,KAAKE,IAAIA,GAAG,KAAKA,GAAG,GAAG,OAAOA,CAAC,CAA9NC,EAAAJ,EAAA,KAAsO,SAASK,GAAM,CAAC,QAAQJ,EAAE,EAAEC,EAAE,EAAEC,EAAE,GAAGD,EAAE,UAAU,SAASD,EAAE,UAAUC,QAAQ,EAAEF,EAAEC,CAAC,KAAKE,IAAIA,GAAG,KAAKA,GAAG,GAAG,OAAOA,CAAC,CAAzGC,EAAAC,EAAA,QC6BxP,MAAAC,EAAA,CAAA,aAAA,YAAA,gBAAA,MAAA,iBAAA,aAAA,EASOC,EAAAC,EAAA,QAAA,WAAA,CAAAC,EAAAC,IAAA,CAEH,KAAA,CAAM,GAAAC,EAAA,MAAO,UAAAC,KAAOA,CAAcC,EAAAA,EAClCC,EAAA,CAAA,EACAC,EAAA,CAAA,EAEA,UAAAC,KAAAH,EACEI,EAAA,WAAA,IAAAD,CAAA,EACEF,EAAAA,GAAAA,EAAAA,GAEAC,EAAAA,GAAAA,EAAAA,GAIJD,EAAAA,UAAAA,EAAAA,QAAAA,OAAAA,KAAAA,CAAAA,EAAAA,KAAAA,GAAAA,EAAAA,SAAAA,CAAAA,CAAAA,EAAAA,OAAAA,QAMA,MAAAI,EAAAD,EAAA,CAA4B,GAAAH,CACvBA,CAAAA,EAGL,OAAAK,EAAAA,QAAAA,cAAAR,EAAA,CAAyB,UAAAN,EAAAa,EAAAN,CAAA,EACiB,GAAAG,EACrCA,IAAAA,CACHL,CAAAA,CAEJ,CAAA"}