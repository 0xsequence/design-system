{"version":3,"file":"FileInput.7c31ff51.js","sources":["../../src/components/FileInput/FileInput.tsx"],"sourcesContent":["import { ChangeEvent, ElementType, forwardRef, useState } from 'react'\n\nimport {\n  Box,\n  PolymorphicComponent,\n  PolymorphicProps,\n  PolymorphicRef,\n} from '~/components/Box'\nimport {\n  HasLabel,\n  HiddenLabel,\n  LabelledField,\n} from '~/components/LabelledField'\nimport { Text } from '~/components/Text'\n\nimport * as styles from './styles.css'\n\nconst MIME_TYPES = {\n  png: '.png,image/png',\n  jpeg: '.jpeg,image/jpeg',\n  jpg: '.jpg,image/jpg',\n  images: 'image/*',\n  pdf: '.pdf,application/pdf',\n}\n\ntype AllowedMimeTypes = keyof typeof MIME_TYPES\n\ntype FileData = {\n  name: string\n  size: number\n  extension: string\n}\n\nexport type FileInputProps = (HasLabel | HiddenLabel) & {\n  disabled?: boolean\n  name: string\n  processing?: boolean\n  validExtensions: AllowedMimeTypes[]\n  value?: string\n  onValueChange?: (value: File) => void\n}\n\nexport const FileInput: PolymorphicComponent<FileInputProps, 'input'> =\n  forwardRef(\n    <T extends ElementType>(\n      {\n        disabled = false,\n        id,\n        label = '',\n        labelLocation = 'hidden',\n        name,\n        onValueChange,\n        processing = false,\n        validExtensions,\n        ...rest\n      }: PolymorphicProps<FileInputProps, T>,\n      ref: PolymorphicRef<T>\n    ) => {\n      const [fileData, setFileData] = useState<FileData>()\n\n      const handleChange = (e: ChangeEvent<HTMLInputElement>) => {\n        const filelist = e.target.files as FileList\n        if (!filelist || !filelist[0]) {\n          return\n        }\n\n        const file = filelist[0]\n        const filename = file.name\n        const filesize = file.size / 1000\n\n        setFileData({\n          name: filename,\n          size: filesize,\n          extension: filename.split('.').pop() ?? '',\n        })\n\n        onValueChange?.(file)\n      }\n\n      const accept = validExtensions.map(ext => MIME_TYPES[ext]).join(',')\n\n      return (\n        <LabelledField\n          forId={id ?? name}\n          label={label}\n          labelLocation={labelLocation}\n        >\n          <Box\n            color={fileData ? 'textBody' : 'textFaded'}\n            className={styles.wrap}\n          >\n            {fileData ? (\n              <Box flexDirection=\"row\" gap=\"2\" alignItems=\"baseline\">\n                <Text>{fileData.name}</Text>\n                <Text color=\"textFaded\" variant=\"xsmall\">\n                  {fileData.size.toFixed(2)} kb\n                </Text>\n              </Box>\n            ) : (\n              <Text>Upload a file</Text>\n            )}\n\n            <Box\n              accept={accept}\n              as=\"input\"\n              className={styles.input}\n              disabled={disabled || processing}\n              id={id ?? name}\n              name={name}\n              ref={ref}\n              type=\"file\"\n              onChange={handleChange}\n              {...rest}\n            />\n          </Box>\n        </LabelledField>\n      )\n    }\n  )\n"],"names":["MIME_TYPES","FileInput","forwardRef","disabled","id","labelLocation","name","onValueChange","validExtensions","ref","fileData","setFileData","useState","handleChange","__name","e","filelist","file","filename","filesize","accept","ext","_jsx","LabelledField","_jsxs","Box","styles.wrap","wrap","Text","styles.input","input","processing","rest"],"mappings":"qtBAiBA,MAAAA,EAAA,CAAmB,IAAA,iBACZ,KAAA,mBACC,IAAA,iBACD,OAAA,UACG,IAAA,sBAEV,EAmBOC,EAAAC,EAAA,QAAA,WAAA,CAAA,CAGD,SAAAC,EAAA,GACa,GAAAC,EACXA,MAAAA,EAAAA,GACQ,cAAAC,EAAA,SACQ,KAAAC,EAChBA,cAAAA,EACAC,WAAAA,EAAAA,GACa,gBAAAC,KACbA,CAEmC,EAAAC,IAAA,CAGrC,KAAA,CAAAC,EAAAC,CAAA,EAAAC,EAAA,QAAA,SAAA,EAEAC,EAAAC,EAAAC,GAAA,OACE,MAAAC,EAAAD,EAAA,OAAA,MACA,GAAA,CAAAC,GAAA,CAAAA,EAAA,GACE,OAGF,MAAAC,EAAAD,EAAA,GACAE,EAAAD,EAAA,KACAE,EAAAF,EAAA,KAAA,IAEAN,EAAAA,CAAY,KAAAO,EACJA,KAAAA,EACAC,WAAAA,EAAAA,EAAAA,MAAAA,GAAAA,EAAAA,IAAAA,IAAAA,KAAAA,EAAAA,EACkC,CAAA,EAG1CZ,GAAAA,MAAAA,EAAAA,EAAoB,EAhBtB,gBAmBAa,EAAAZ,EAAA,IAAAa,GAAArB,EAAAqB,EAAA,EAAA,KAAA,GAAA,EAEA,OAAAC,EAAAC,EAAA,CACgB,MAAAnB,GAAA,KAAAA,EAAAE,EACCA,MAAAA,EACb,cAAAD,EACA,SAAAmB,EAAAC,EAAA,CAEI,MAAAf,EAAA,WAAA,YAC6B,UAAAgB,EACbC,SAAAA,CAAAA,EAAAA,EAAAA,EAAAA,CAGZ,cAAA,MAAe,IAAA,IAAU,WAAA,WAAe,SAAA,CAAAL,EAAAM,EAAA,CACrC,SAAAlB,EAAA,IAAWJ,CAAAA,EAAAA,EAAAA,EAAAA,CACX,MAAA,YAAO,QAAA,SAAoB,SAAA,CAAAI,EAAA,KAAA,QAAA,CAAA,EAAA,KAAA,CACL,CAAA,CAAA,CACpB,CAAA,EAAAY,EAAAM,EAAA,CAGJ,SAAA,eAAA,CAAA,EAAAN,EAAAG,EAAA,CAGH,OAAAL,EACF,GAAA,QACG,UAAAS,EACeC,SAAAA,GAAAA,EACIC,GAAAA,GAAAA,KAAAA,EAAAA,EACZzB,KAAAA,EACV,IAAAG,EACA,KAAA,OACK,SAAAI,EACKA,GAAAA,CACNmB,CAAAA,CAAAA,CACJ,CAAA,CAAA,CAAA,CAIV,CAAA"}