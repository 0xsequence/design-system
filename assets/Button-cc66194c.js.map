{"version":3,"file":"Button-cc66194c.js","sources":["../../src/components/Button/Button.tsx"],"sourcesContent":["import { clsx } from 'clsx'\nimport { ComponentType, forwardRef, ElementType, ReactNode } from 'react'\n\nimport {\n  Box,\n  PolymorphicComponent,\n  PolymorphicProps,\n  PolymorphicRef,\n} from '~/components/Box'\nimport { Text } from '~/components/Text'\nimport { IconProps } from '~/icons/types'\n\nimport { buttonVariants, ButtonVariants } from './styles.css'\n\ntype ButtonProps = ButtonVariants & {\n  disabled?: boolean\n  pending?: boolean\n  label?: ReactNode\n  leftIcon?: ComponentType<IconProps>\n  rightIcon?: ComponentType<IconProps>\n}\n\nexport const Button: PolymorphicComponent<ButtonProps, 'button'> = forwardRef(\n  <T extends ElementType>(\n    props: PolymorphicProps<ButtonProps, T>,\n    ref: PolymorphicRef<T>\n  ) => {\n    const {\n      as = 'button',\n      activeOutline,\n      className,\n      disabled = false,\n      display = 'inline-flex',\n      fontWeight = 'bold',\n      pending = false,\n      label,\n      leftIcon: LeftIcon,\n      rightIcon: RightIcon,\n      size = 'md',\n      variant = 'glass',\n      width = 'fit',\n      shape = 'circle',\n      ...restProps\n    } = props\n\n    const hasLeftIcon = LeftIcon !== undefined && label !== undefined\n    const hasRightIcon = RightIcon !== undefined && label !== undefined\n    const iconOnly = LeftIcon !== undefined && label === undefined\n\n    const clickable = !disabled && !pending\n    const iconSize = size === 'xs' ? 'xs' : 'sm'\n\n    return (\n      <Box\n        as={as}\n        className={clsx(\n          className,\n          buttonVariants({\n            activeOutline,\n            clickable,\n            disabled: disabled || pending,\n            hasLeftIcon,\n            hasRightIcon,\n            iconOnly,\n            size: variant === 'text' ? undefined : size,\n            shape,\n            variant,\n          })\n        )}\n        disabled={disabled || pending}\n        display={display}\n        fontWeight={fontWeight}\n        ref={ref}\n        width={width}\n        {...restProps}\n      >\n        <Box\n          width=\"full\"\n          justifyContent=\"space-between\"\n          alignItems=\"center\"\n          gap={size === 'xs' ? '1' : '2'}\n        >\n          <Box\n            justifyContent=\"flex-start\"\n            alignItems=\"center\"\n            gap={size === 'xs' ? '1' : '2'}\n          >\n            {LeftIcon && <LeftIcon size={iconSize} />}\n            {!iconOnly && <Text>{label}</Text>}\n          </Box>\n\n          {RightIcon && <RightIcon size={iconSize} />}\n        </Box>\n      </Box>\n    )\n  }\n)\n"],"names":["Button","forwardRef","props","ref","as","activeOutline","className","disabled","display","fontWeight","pending","label","LeftIcon","RightIcon","size","variant","width","shape","restProps","hasLeftIcon","hasRightIcon","iconOnly","clickable","iconSize","jsx","Box","clsx","buttonVariants","jsxs","Text"],"mappings":"+vDAsBO,MAAAA,EAAAC,EAAA,WAA4D,CAAAC,EAAAC,IAAA,CAK/D,KAAA,CAAM,GAAAC,EAAA,SACC,cAAAC,EACL,UAAAC,EACA,SAAAC,EAAA,GACW,QAAAC,EAAA,cACD,WAAAC,EAAA,OACG,QAAAC,EAAA,GACH,MAAAC,EACV,SAAAC,EACU,UAAAC,EACC,KAAAC,EAAA,KACJ,QAAAC,EAAA,QACG,MAAAC,EAAA,MACF,MAAAC,EAAA,YACAC,CACL,EAAAhB,EAGLiB,EAAAP,IAAA,QAAAD,IAAA,OACAS,EAAAP,IAAA,QAAAF,IAAA,OACAU,EAAAT,IAAA,QAAAD,IAAA,OAEAW,EAAA,CAAAf,GAAA,CAAAG,EACAa,EAAAT,IAAA,KAAA,KAAA,KAEA,OAAAU,EACEC,EAAC,CAAA,GAAArB,EACC,UAAAsB,EACWpB,EACTqB,EAAA,CACe,cAAAtB,EACb,UAAAiB,EACA,SAAAf,GAAAG,EACsB,YAAAS,EACtB,aAAAC,EACA,SAAAC,EACA,KAAAN,IAAA,OAAA,OAAAD,EACuC,MAAAG,EACvC,QAAAF,CACA,CAAA,CACD,EACH,SAAAR,GAAAG,EACsB,QAAAF,EACtB,WAAAC,EACA,IAAAN,EACA,MAAAa,EACA,GAAAE,EACI,SAAAU,EAEJH,EAAC,CAAA,MAAA,OACO,eAAA,gBACS,WAAA,SACJ,IAAAX,IAAA,KAAA,IAAA,IACgB,SAAA,CAE3Bc,EAAAH,EAAC,CAAA,eAAA,aACgB,WAAA,SACJ,IAAAX,IAAA,KAAA,IAAA,IACgB,SAAA,CAE1BF,GAAAY,EAAAZ,EAAA,CAAA,KAAAW,CAAA,CAAA,EAAsC,CAAAF,GAAAG,EAAAK,EAAA,CAAA,SAAAlB,CAAA,CAAA,CACZ,CAAA,CAAA,EAC7BE,GAAAW,EAAAX,EAAA,CAAA,KAAAU,CAAA,CAAA,CAEyC,CAAA,CAAA,CAC3C,CAAA,CACF,CAGN"}