var d=Object.defineProperty;var a=(p,o)=>d(p,"name",{value:o,configurable:!0});import"./jsx-runtime.a3662f81.js";import{c as t,A as x,M as y}from"./Props.4ba6be8c.js";import"./iframe.ae17aa7f.js";import"./Box.eed64558.js";import"./Avatar.611dd1c6.js";import"./Badge.e425ab6a.js";import"./Button.e7c36b62.js";/* empty css                             *//* empty css                              */import"./Collapsible.729887b5.js";import"./ControlledTextInput.04709353.js";import"./Group.69c6d250.js";import"./IconButton.c5482f17.js";import"./LabelledField.ed8f675d.js";import"./Modal.af1fb3f3.js";import"./Row.ca332e84.js";import"./Scroll.426f5121.js";import"./Spinner.6f1b9f44.js";import"./Stack.6cc8b8f5.js";import"./Switch.f2196d42.js";import"./TabbedNav.b4c9b4d8.js";import"./Tabs.fe955368.js";import"./Tag.257ab3c1.js";import{T as e}from"./Text.f314b325.js";import"./TextInput.71c9f29a.js";import"./ThemeProvider.de448945.js";import"./TokenImage.afba0df0.js";import"./Tooltip.460aef54.js";import"./string.f7de9791.js";import"./index.e6ccbc04.js";import"./es.map.constructor.6eb32732.js";import"./es.number.to-fixed.9d6d0bca.js";import"./atoms.css.b06098ab.js";import"./index.3f9518bc.js";import"./vanilla-extract-recipes-createRuntimeFn.esm.e63f122f.js";import"./index.module.60fdf794.js";import"./index.e454e287.js";import"./index.module.7c246677.js";import"./index.module.78853500.js";import"./WarningIcon.f4108cf3.js";import"./index.9ac918a1.js";import"./tslib.es6.03b483f6.js";import"./index.module.3df73e8c.js";import"./index.50264ae7.js";import"./index.module.59316c54.js";import"./index.module.a29260ec.js";import"./index.module.4e3e08eb.js";import"./index.module.09f2fb21.js";function s(){return s=Object.assign?Object.assign.bind():function(p){for(var o=1;o<arguments.length;o++){var n=arguments[o];for(var i in n)Object.prototype.hasOwnProperty.call(n,i)&&(p[i]=n[i])}return p},s.apply(this,arguments)}a(s,"_extends");const r="The quick brown fox jumps over the lazy dog",u={sampleText:r},g="wrapper";function l({components:p,...o}){return t(g,s({},u,o,{components:p,mdxType:"MDXLayout"}),t(y,{title:"Design System/Typography",mdxType:"Meta"}),t("h1",null,"Typography"),t("p",null,"The defined set of typefaces and used in the design system."),t("p",null,t("strong",{parentName:"p"},"xlarge")),t(e,{variant:"xlarge",mdxType:"Text"},r),t("p",null,t("strong",{parentName:"p"},"large")),t(e,{variant:"large",mdxType:"Text"},r),t("p",null,t("strong",{parentName:"p"},"medium")),t(e,{variant:"medium",mdxType:"Text"},r),t("p",null,t("strong",{parentName:"p"},"normal")),t(e,{variant:"normal",mdxType:"Text"},r),t("p",null,t("strong",{parentName:"p"},"small")),t(e,{variant:"small",mdxType:"Text"},r),t("p",null,t("strong",{parentName:"p"},"xsmall")),t(e,{variant:"xsmall",mdxType:"Text"},r),t("p",null,t("strong",{parentName:"p"},"code")),t(e,{variant:"code",mdxType:"Text"},r))}a(l,"MDXContent");l.isMDXComponent=!0;const T=a(()=>{throw new Error("Docs-only story")},"__page");T.parameters={docsOnly:!0};const m={title:"Design System/Typography",includeStories:["__page"]},c={};m.parameters=m.parameters||{};m.parameters.docs={...m.parameters.docs||{},page:()=>t(x,{mdxStoryNameToKey:c,mdxComponentAnnotations:m},t(l,null))};const yt=["sampleText","__page"];export{yt as __namedExportsOrder,T as __page,m as default,r as sampleText};
//# sourceMappingURL=Typography.stories.26bec1ff.js.map
