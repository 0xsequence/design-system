var d=Object.defineProperty;var a=(p,e)=>d(p,"name",{value:e,configurable:!0});import"./jsx-runtime.2a340469.js";import{c as t,A as x,M as y}from"./Props.44715173.js";import"./iframe.f222926b.js";import"./Avatar.b542b75a.js";import"./Badge.035edbfe.js";import"./Box.945bb87a.js";import"./Button.0eea3872.js";/* empty css                             *//* empty css                              */import"./Collapsible.beaf5ffe.js";import"./Form.3a2ced92.js";import"./Group.a428b55c.js";import"./IconButton.01cd3b38.js";import"./LabelledField.7f7c998b.js";import"./Modal.a31c5f07.js";import"./Row.9d6e41ec.js";import"./Spinner.a086e88c.js";import"./Stack.40b50486.js";import"./Switch.63cc5eb1.js";import"./Tabs.71a332ff.js";import"./TabbedNav.c27a477f.js";import"./Tag.e6328fe3.js";import{T as o}from"./Text.3747fb73.js";import"./TextInput.6578c7c1.js";import"./ThemeProvider.9c4fea0c.js";import"./TokenImage.da9594cc.js";import"./Tooltip.49a16ef7.js";import"./string.9436eb64.js";import"./index.74a36636.js";import"./es.map.constructor.d2d5795f.js";import"./es.number.to-fixed.e316c789.js";import"./index.3f9518bc.js";import"./vanilla-extract-recipes-createRuntimeFn.esm.e63f122f.js";import"./atoms.css.b06098ab.js";import"./index.module.e80122f3.js";import"./index.b5e3fa94.js";import"./index.module.3c242dac.js";import"./index.module.67016897.js";import"./WarningIcon.030375fd.js";import"./index.d7df96a9.js";import"./tslib.es6.03b483f6.js";import"./index.module.a16d226b.js";import"./index.338dafc1.js";import"./index.module.e0dcd0c9.js";import"./index.module.282dfe9b.js";import"./index.module.6410cf97.js";import"./index.module.ee5b85a2.js";function s(){return s=Object.assign?Object.assign.bind():function(p){for(var e=1;e<arguments.length;e++){var n=arguments[e];for(var i in n)Object.prototype.hasOwnProperty.call(n,i)&&(p[i]=n[i])}return p},s.apply(this,arguments)}a(s,"_extends");const r="The quick brown fox jumps over the lazy dog",u={sampleText:r},g="wrapper";function l({components:p,...e}){return t(g,s({},u,e,{components:p,mdxType:"MDXLayout"}),t(y,{title:"Design System/Typography",mdxType:"Meta"}),t("h1",null,"Typography"),t("p",null,"The defined set of typefaces and used in the design system."),t("p",null,t("strong",{parentName:"p"},"xlarge")),t(o,{variant:"xlarge",mdxType:"Text"},r),t("p",null,t("strong",{parentName:"p"},"large")),t(o,{variant:"large",mdxType:"Text"},r),t("p",null,t("strong",{parentName:"p"},"medium")),t(o,{variant:"medium",mdxType:"Text"},r),t("p",null,t("strong",{parentName:"p"},"normal")),t(o,{variant:"normal",mdxType:"Text"},r),t("p",null,t("strong",{parentName:"p"},"small")),t(o,{variant:"small",mdxType:"Text"},r),t("p",null,t("strong",{parentName:"p"},"xsmall")),t(o,{variant:"xsmall",mdxType:"Text"},r),t("p",null,t("strong",{parentName:"p"},"code")),t(o,{variant:"code",mdxType:"Text"},r))}a(l,"MDXContent");l.isMDXComponent=!0;const T=a(()=>{throw new Error("Docs-only story")},"__page");T.parameters={docsOnly:!0};const m={title:"Design System/Typography",includeStories:["__page"]},c={};m.parameters=m.parameters||{};m.parameters.docs={...m.parameters.docs||{},page:()=>t(x,{mdxStoryNameToKey:c,mdxComponentAnnotations:m},t(l,null))};const xt=["sampleText","__page"];export{xt as __namedExportsOrder,T as __page,m as default,r as sampleText};
//# sourceMappingURL=Typography.stories.bcbc83a5.js.map
