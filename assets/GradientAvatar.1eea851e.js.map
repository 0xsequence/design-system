{"version":3,"file":"GradientAvatar.1eea851e.js","sources":["../../src/components/GradientAvatar/GradientAvatar.tsx"],"sourcesContent":["import { Fragment } from 'react'\n\nimport { Box, BoxProps } from '~/components/Box'\n\nimport * as styles from './styles.css'\n\ntype GradientAvatarProps = {\n  address: string\n  initials?: string\n  complexity?: number\n} & styles.AvatarVariants &\n  BoxProps\n\nconst cyrb53 = (str: string, seed: number = 0): number => {\n  let h1 = 0xdeadbeef ^ seed,\n    h2 = 0x41c6ce57 ^ seed\n\n  for (let i = 0, ch; i < str.length; i++) {\n    ch = str.charCodeAt(i)\n    h1 = Math.imul(h1 ^ ch, 2654435761)\n    h2 = Math.imul(h2 ^ ch, 1597334677)\n  }\n\n  h1 =\n    Math.imul(h1 ^ (h1 >>> 16), 2246822507) ^\n    Math.imul(h2 ^ (h2 >>> 13), 3266489909)\n  h2 =\n    Math.imul(h2 ^ (h2 >>> 16), 2246822507) ^\n    Math.imul(h1 ^ (h1 >>> 13), 3266489909)\n\n  return 4294967296 * (2097151 & h2) + (h1 >>> 0)\n}\n\nconst generateGradient = (value: number) => {\n  const hueA = value % 360\n  const hueB = (value + 120) % 360\n  const hueC = (value + 240) % 360\n\n  return {\n    a: `hsl(${hueA}deg 100% 50%)`,\n    b: `hsl(${hueB}deg 100% 50%)`,\n    c: `hsl(${hueC}deg 100% 50%)`,\n  }\n}\n\nexport const GradientAvatar = (props: GradientAvatarProps) => {\n  const { address, size = 'md', complexity = 1, ...rest } = props\n\n  const hashes = []\n  for (let i = 0; i < complexity; i++) {\n    const offset = i * 4\n\n    hashes.push({\n      a: cyrb53(address, offset),\n      b: cyrb53(address, offset + 1),\n      c: cyrb53(address, offset + 2),\n      d: cyrb53(address, offset + 3),\n    })\n  }\n\n  const gradients = hashes.map((hash, idx) => ({\n    ...generateGradient(hash.a),\n    x: hash.c % 1000,\n    y: hash.d % 1000,\n    r: hash.b % (1000 / (idx + 1)),\n  }))\n\n  gradients.map(gradient => {\n    console.log('x', gradient.x, 'y', gradient.y)\n  })\n\n  return (\n    <Box\n      as=\"svg\"\n      className={styles.avatar({ size })}\n      viewBox={`0 0 1000 1000`}\n      version=\"1.1\"\n      xmlns=\"http://www.w3.org/2000/svg\"\n      {...rest}\n    >\n      <defs>\n        <clipPath id=\"circle-clip\">\n          <circle cx=\"500\" cy=\"500\" r=\"500\" />\n        </clipPath>\n\n        <filter\n          id=\"blur\"\n          x=\"-10%\"\n          y=\"-10%\"\n          width=\"120%\"\n          height=\"120%\"\n          filterUnits=\"userSpaceOnUse\"\n          colorInterpolationFilters=\"sRGB\"\n        >\n          <feFlood floodOpacity=\"0\" result=\"BackgroundImageFix\"></feFlood>\n          <feBlend\n            mode=\"normal\"\n            in=\"SourceGraphic\"\n            in2=\"BackgroundImageFix\"\n            result=\"shape\"\n          ></feBlend>\n          <feGaussianBlur\n            stdDeviation=\"120\"\n            result=\"effect1_foregroundBlur\"\n          ></feGaussianBlur>\n        </filter>\n\n        {gradients.map((gradient, idx) => (\n          <Fragment key={idx}>\n            <radialGradient id={`gradient-a-${idx}`}>\n              <stop offset=\"0\" stopColor={gradient.a} />\n              <stop offset=\"1\" stopColor={gradient.b} />\n            </radialGradient>\n\n            <radialGradient id={`gradient-b-${idx}`}>\n              <stop offset=\"0\" stopColor={gradient.b} />\n              <stop offset=\"1\" stopColor={gradient.a} />\n            </radialGradient>\n          </Fragment>\n        ))}\n\n        <linearGradient id={`gradient-background`} x1=\"0\" y1=\"0\" x2=\"1\" y2=\"1\">\n          <stop offset=\"0\" stopColor={gradients[0].a} />\n          <stop offset=\"1\" stopColor={gradients[0].c} />\n        </linearGradient>\n      </defs>\n\n      <g clipPath=\"url(#circle-clip)\">\n        <rect width=\"100%\" height=\"100%\" fill=\"url(#gradient-background)\" />\n\n        <g filter=\"url(#blur)\">\n          {gradients.map((gradient, idx) => (\n            <Fragment key={idx}>\n              <circle\n                fill={`url(#gradient-a-${idx})`}\n                cx={gradient.x}\n                cy={gradient.y}\n                r={gradient.r}\n              />\n              <circle\n                key={idx}\n                fill={`url(#gradient-b-${idx})`}\n                cx={gradient.y}\n                cy={gradient.x}\n                r={gradient.r / 2}\n              />\n            </Fragment>\n          ))}\n        </g>\n\n        {/* {initials && (\n          <text\n            x=\"50%\"\n            y=\"50%\"\n            alignmentBaseline=\"central\"\n            dominantBaseline=\"central\"\n            textAnchor=\"middle\"\n            fill=\"#fff\"\n            fontFamily=\"sans-serif\"\n            fontSize={(size * 0.9) / text.length}\n          >\n            {initials}\n          </text>\n        )} */}\n      </g>\n    </Box>\n  )\n}\n"],"names":["cyrb53","__name","str","seed","h1","h2","i","ch","generateGradient","value","hueA","hueB","hueC","GradientAvatar","props","address","complexity","rest","hashes","offset","gradients","hash","idx","console","_jsxs","Box","styles.avatar","size","_jsx","gradient","Fragment","a","b","c","x","y","r"],"mappings":"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"}