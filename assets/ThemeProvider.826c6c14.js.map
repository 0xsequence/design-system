{"version":3,"file":"ThemeProvider.826c6c14.js","sources":["../../src/components/ThemeProvider/ThemeProvider.tsx"],"sourcesContent":["//import { setElementVars } from '@vanilla-extract/dynamic';\nimport { createContext, PropsWithChildren, useEffect, useMemo } from 'react'\n\nconst THEME_ATTR = 'data-theme'\n\ninterface ThemeContextValue {\n  theme: string\n}\n\nconst ThemeContext = createContext<ThemeContextValue | null>(null)\n\ninterface ThemeProviderProps {\n  theme: string\n}\n\nexport const ThemeProvider = (props: PropsWithChildren<ThemeProviderProps>) => {\n  const { theme, children } = props\n  const value: ThemeContextValue = useMemo(\n    () => ({\n      theme\n    }),\n    [theme]\n  )\n\n  useEffect(() => {\n    const root = document.querySelector(':root')\n\n    if (root) {\n      root.setAttribute(THEME_ATTR, theme)\n      //setElementVars(root, {})\n    }\n  }, [theme])\n\n  return <ThemeContext.Provider value={value}>{children}</ThemeContext.Provider>\n}\n"],"names":["THEME_ATTR","ThemeContext","createContext","ThemeProvider","__name","props","theme","children","value","useMemo","useEffect","root","_jsx"],"mappings":"oIAGA,MAAAA,EAAA,aAMAC,EAAAC,EAAAA,QAAAA,cAAA,IAAA,EAMOC,EAAAC,EAAAC,GAAA,CACL,KAAA,CAAM,MAAAC,EAAEA,SAAAA,CAAOC,EAAAA,EACfC,EAAAC,EAAAA,QAAAA,QAAA,KAAA,CACS,MAAAH,CACLA,GAAAA,CAAAA,CAAAA,CAAAA,EAKJI,OAAAA,EAAAA,QAAAA,UAAAA,IAAAA,CACE,MAAAC,EAAA,SAAA,cAAA,OAAA,EAEAA,GACEA,EAAAA,aAAAA,EAAAA,CAAAA,CAEF,EAAA,CAAAL,CAAA,CAAA,EAGFM,EAAAX,EAAA,SAAA,CAA6B,MAAAO,EAAC,SAAAD,CAAa,CAAA,CAC7C,EAnBO"}