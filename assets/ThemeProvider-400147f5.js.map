{"version":3,"file":"ThemeProvider-400147f5.js","sources":["../../node_modules/.pnpm/@vanilla-extract+private@1.0.3/node_modules/@vanilla-extract/private/dist/vanilla-extract-private.esm.js","../../node_modules/.pnpm/@vanilla-extract+dynamic@2.1.0/node_modules/@vanilla-extract/dynamic/dist/vanilla-extract-dynamic.esm.js","../../src/components/ThemeProvider/ThemeProvider.tsx"],"sourcesContent":["function getVarName(variable) {\n  var matches = variable.match(/^var\\((.*)\\)$/);\n\n  if (matches) {\n    return matches[1];\n  }\n\n  return variable;\n}\n\nfunction get(obj, path) {\n  var result = obj;\n\n  for (var key of path) {\n    if (!(key in result)) {\n      throw new Error(\"Path \".concat(path.join(' -> '), \" does not exist in object\"));\n    }\n\n    result = result[key];\n  }\n\n  return result;\n}\n\nfunction walkObject(obj, fn) {\n  var path = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : [];\n  var clone = obj.constructor();\n\n  for (var key in obj) {\n    var _value = obj[key];\n    var currentPath = [...path, key];\n\n    if (typeof _value === 'string' || typeof _value === 'number' || _value == null) {\n      clone[key] = fn(_value, currentPath);\n    } else if (typeof _value === 'object' && !Array.isArray(_value)) {\n      clone[key] = walkObject(_value, fn, currentPath);\n    } else {\n      console.warn(\"Skipping invalid key \\\"\".concat(currentPath.join('.'), \"\\\". Should be a string, number, null or object. Received: \\\"\").concat(Array.isArray(_value) ? 'Array' : typeof _value, \"\\\"\"));\n    }\n  }\n\n  return clone;\n}\n\nexport { get, getVarName, walkObject };\n","import { walkObject, get, getVarName } from '@vanilla-extract/private';\n\nfunction assignInlineVars(varsOrContract, tokens) {\n  var styles = {};\n  if (typeof tokens === 'object') {\n    var _contract = varsOrContract;\n    walkObject(tokens, (value, path) => {\n      if (value == null) {\n        return;\n      }\n      var varName = get(_contract, path);\n      styles[getVarName(varName)] = String(value);\n    });\n  } else {\n    var _vars = varsOrContract;\n    for (var varName in _vars) {\n      var value = _vars[varName];\n      if (value == null) {\n        continue;\n      }\n      styles[getVarName(varName)] = value;\n    }\n  }\n  Object.defineProperty(styles, 'toString', {\n    value: function value() {\n      return Object.keys(this).map(key => \"\".concat(key, \":\").concat(this[key])).join(';');\n    },\n    writable: false\n  });\n  return styles;\n}\n\nfunction setVar(element, variable, value) {\n  element.style.setProperty(getVarName(variable), value);\n}\nfunction setElementVars(element, varsOrContract, tokens) {\n  if (typeof tokens === 'object') {\n    var _contract = varsOrContract;\n    walkObject(tokens, (value, path) => {\n      if (value == null) {\n        return;\n      }\n      setVar(element, get(_contract, path), String(value));\n    });\n  } else {\n    var _vars = varsOrContract;\n    for (var varName in _vars) {\n      var value = _vars[varName];\n      if (value == null) {\n        continue;\n      }\n      setVar(element, varName, _vars[varName]);\n    }\n  }\n}\n\nexport { assignInlineVars, setElementVars };\n","import { setElementVars } from '@vanilla-extract/dynamic'\nimport {\n  createContext,\n  PropsWithChildren,\n  useContext,\n  useEffect,\n  useMemo,\n  useState,\n} from 'react'\n\nimport { colorSchemeVars } from '~/css/vars.css'\nimport { colors, ColorTokens } from '~/tokens/color'\n\nconst THEMES = ['dark', 'light'] as const\n\nexport type Theme = (typeof THEMES)[number]\n\nconst DEFAULT_THEME = 'dark'\nconst THEME_ATTR = 'data-theme'\nconst STORAGE_KEY = '@sequence.theme'\n\nconst isTheme = (theme: any): theme is Theme => THEMES.includes(theme as any)\n\ntype ThemeOverrides = Partial<ColorTokens>\n\nconst isThemeOverrides = (theme: any): theme is ThemeOverrides =>\n  typeof theme === 'object' && theme !== null && !Array.isArray(theme)\n\nconst getStorageKey = (scope?: string) =>\n  scope ? `${STORAGE_KEY}.${scope}` : STORAGE_KEY\n\ninterface ThemeContextValue {\n  theme: Theme | ThemeOverrides\n  root?: string\n  setTheme: (mode: Theme) => void\n}\n\ninterface ThemeProviderProps {\n  theme?: Theme | ThemeOverrides\n  root?: string\n  scope?: string\n}\n\nconst getTheme = (scope?: string): Theme => {\n  const persistedTheme = localStorage.getItem(\n    getStorageKey(scope)\n  ) as Theme | null\n\n  if (persistedTheme && THEMES.includes(persistedTheme)) {\n    return persistedTheme\n  }\n\n  // else if (matchMedia(`(prefers-color-scheme: light)`).matches) {\n  //   return 'light'\n  // } else if (matchMedia(`(prefers-color-scheme: dark)`).matches) {\n  //   return 'dark'\n  // }\n\n  return DEFAULT_THEME\n}\n\nconst ThemeContext = createContext<ThemeContextValue | null>(null)\n\nexport const ThemeProvider = (props: PropsWithChildren<ThemeProviderProps>) => {\n  const [theme, setTheme] = useState<Theme | ThemeOverrides>(\n    props.theme || getTheme(props.scope)\n  )\n\n  useEffect(() => {\n    // Add is-apple class\n    ;/Mac/.test(window.navigator.userAgent) &&\n      window.document.documentElement.classList.add('is-apple')\n  }, [])\n\n  // Allow prop theme override\n  useEffect(() => {\n    if (props.theme) {\n      setTheme(props.theme)\n    }\n  }, [props.theme])\n\n  // Set the data-theme attribtute on the document root element\n  useEffect(() => {\n    const rootEl = document.querySelector(props.root || ':root') as HTMLElement\n\n    if (rootEl) {\n      if (isTheme(theme)) {\n        rootEl.setAttribute(THEME_ATTR, theme)\n        setElementVars(rootEl, colorSchemeVars, {\n          colors: colors[theme],\n        })\n      } else if (isThemeOverrides(theme)) {\n        setElementVars(rootEl, colorSchemeVars, {\n          colors: theme as ColorTokens,\n        })\n      }\n    }\n  }, [theme, props.root])\n\n  // Create the context value\n  const value: ThemeContextValue = useMemo(() => {\n    return {\n      theme,\n      root: props.root,\n      setTheme: (mode: Theme) => {\n        if (THEMES.includes(mode)) {\n          // Save to local storage\n          localStorage.setItem(getStorageKey(props.scope), mode)\n\n          // Set the theme state which will cause a re-render\n          setTheme(mode)\n        }\n      },\n    }\n  }, [theme, props.root, props.scope])\n\n  return (\n    <ThemeContext.Provider value={value}>\n      {props.children}\n    </ThemeContext.Provider>\n  )\n}\n\nexport const useTheme = () => {\n  const context = useContext(ThemeContext)\n\n  if (!context) {\n    throw new Error('useTheme must be used within a ThemeProvider')\n  }\n\n  return context\n}\n"],"names":["getVarName","variable","matches","get","obj","path","result","key","walkObject","fn","clone","_value","currentPath","setVar","element","value","setElementVars","varsOrContract","tokens","_contract","_vars","varName","THEMES","DEFAULT_THEME","THEME_ATTR","STORAGE_KEY","isTheme","theme","isThemeOverrides","getStorageKey","scope","getTheme","persistedTheme","ThemeContext","createContext","ThemeProvider","props","setTheme","useState","useEffect","rootEl","colorSchemeVars","colors","useMemo","mode","jsx","useTheme","context","useContext"],"mappings":"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","x_google_ignoreList":[0,1]}