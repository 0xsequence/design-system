var d=Object.defineProperty;var a=(p,e)=>d(p,"name",{value:e,configurable:!0});import"./jsx-runtime.b4654c87.js";import{c as t,A as x,M as y}from"./Props.fc4e5dc5.js";import"./iframe.f3047d8a.js";import"./Avatar.c17381cd.js";import"./Badge.3fddc3ba.js";import"./Box.00136d2c.js";import"./Button.56fe8ffd.js";/* empty css                             *//* empty css                              */import"./Collapsible.68297283.js";import"./ControlledTextInput.acd36881.js";import"./Group.6d93d709.js";import"./IconButton.e8772dd5.js";import"./LabelledField.401fdbbf.js";import"./Modal.89bd87a5.js";import"./Row.036071f3.js";import"./Spinner.52bbd0cc.js";import"./Stack.41489007.js";import"./Switch.82ba2cad.js";import"./Tabs.a44383e5.js";import"./TabbedNav.df148c4c.js";import"./Tag.829cd762.js";import{T as o}from"./Text.4c73ff2e.js";import"./TextInput.b401cc16.js";import"./ThemeProvider.4cb4d04c.js";import"./TokenImage.d0760f34.js";import"./Tooltip.7dd54a70.js";import"./string.b178e43b.js";import"./index.f7c67c24.js";import"./es.map.constructor.27f0e5e3.js";import"./es.number.to-fixed.80afe722.js";import"./index.3f9518bc.js";import"./vanilla-extract-recipes-createRuntimeFn.esm.e63f122f.js";import"./atoms.css.b06098ab.js";import"./index.module.0ade2719.js";import"./index.00dea71a.js";import"./index.module.1392ee73.js";import"./index.module.b91d73c7.js";import"./WarningIcon.09911fdc.js";import"./index.c3f5be55.js";import"./tslib.es6.03b483f6.js";import"./index.module.a02423fa.js";import"./index.7fdc7a7e.js";import"./index.module.32e237d0.js";import"./index.module.96906151.js";import"./index.module.3fb66b52.js";import"./index.module.9c4174a7.js";function s(){return s=Object.assign?Object.assign.bind():function(p){for(var e=1;e<arguments.length;e++){var n=arguments[e];for(var i in n)Object.prototype.hasOwnProperty.call(n,i)&&(p[i]=n[i])}return p},s.apply(this,arguments)}a(s,"_extends");const r="The quick brown fox jumps over the lazy dog",u={sampleText:r},g="wrapper";function l({components:p,...e}){return t(g,s({},u,e,{components:p,mdxType:"MDXLayout"}),t(y,{title:"Design System/Typography",mdxType:"Meta"}),t("h1",null,"Typography"),t("p",null,"The defined set of typefaces and used in the design system."),t("p",null,t("strong",{parentName:"p"},"xlarge")),t(o,{variant:"xlarge",mdxType:"Text"},r),t("p",null,t("strong",{parentName:"p"},"large")),t(o,{variant:"large",mdxType:"Text"},r),t("p",null,t("strong",{parentName:"p"},"medium")),t(o,{variant:"medium",mdxType:"Text"},r),t("p",null,t("strong",{parentName:"p"},"normal")),t(o,{variant:"normal",mdxType:"Text"},r),t("p",null,t("strong",{parentName:"p"},"small")),t(o,{variant:"small",mdxType:"Text"},r),t("p",null,t("strong",{parentName:"p"},"xsmall")),t(o,{variant:"xsmall",mdxType:"Text"},r),t("p",null,t("strong",{parentName:"p"},"code")),t(o,{variant:"code",mdxType:"Text"},r))}a(l,"MDXContent");l.isMDXComponent=!0;const T=a(()=>{throw new Error("Docs-only story")},"__page");T.parameters={docsOnly:!0};const m={title:"Design System/Typography",includeStories:["__page"]},c={};m.parameters=m.parameters||{};m.parameters.docs={...m.parameters.docs||{},page:()=>t(x,{mdxStoryNameToKey:c,mdxComponentAnnotations:m},t(l,null))};const xt=["sampleText","__page"];export{xt as __namedExportsOrder,T as __page,m as default,r as sampleText};
//# sourceMappingURL=Typography.stories.047cccf1.js.map
