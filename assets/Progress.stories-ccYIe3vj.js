import{j as i}from"./jsx-runtime-CexXSJP5.js";import{r as b}from"./index-BP8_t0zE.js";import{c as w,P as h}from"./index-BEGV7LFS.js";import{B as g}from"./Box-BTyrg29j.js";import"./index-BxmsGmlx.js";import"./helpers.css.ts.vanilla-C3xvljdQ.js";/* empty css                            */var c="Progress",p=100,[E,F]=w(c),[R,M]=E(c),_=b.forwardRef((e,r)=>{const{__scopeProgress:n,value:a=null,max:t,getValueLabel:I=j,...S}=e;(t||t===0)&&!m(t)&&console.error(C(`${t}`,"Progress"));const o=m(t)?t:p;a!==null&&!v(a,o)&&console.error(D(`${a}`,"Progress"));const s=v(a,o)?a:null,V=u(s)?I(s,o):void 0;return i.jsx(R,{scope:n,value:s,max:o,children:i.jsx(h.div,{"aria-valuemax":o,"aria-valuemin":0,"aria-valuenow":u(s)?s:void 0,"aria-valuetext":V,role:"progressbar","data-state":$(s,o),"data-value":s??void 0,"data-max":o,...S,ref:r})})});_.displayName=c;var y="ProgressIndicator",N=b.forwardRef((e,r)=>{const{__scopeProgress:n,...a}=e,t=M(y,n);return i.jsx(h.div,{"data-state":$(t.value,t.max),"data-value":t.value??void 0,"data-max":t.max,...a,ref:r})});N.displayName=y;function j(e,r){return`${Math.round(e/r*100)}%`}function $(e,r){return e==null?"indeterminate":e===r?"complete":"loading"}function u(e){return typeof e=="number"}function m(e){return u(e)&&!isNaN(e)&&e>0}function v(e,r){return u(e)&&!isNaN(e)&&e<=r&&e>=0}function C(e,r){return`Invalid prop \`max\` of value \`${e}\` supplied to \`${r}\`. Only numbers greater than 0 are valid max values. Defaulting to \`${p}\`.`}function D(e,r){return`Invalid prop \`value\` of value \`${e}\` supplied to \`${r}\`. The \`value\` prop must be:
  - a positive number
  - less than the value passed to \`max\` (or ${p} if no \`max\` prop is set)
  - \`null\` or \`undefined\` if the progress is indeterminate.

Defaulting to \`null\`.`}var L=_;const d=e=>{const{value:r,color:n="positive"}=e,a=Math.min(r*100,100);return i.jsx(g,{as:L,value:a,borderRadius:"circle",background:"backgroundPrimary",width:"full",height:"1",overflow:"hidden",position:"relative",children:i.jsx(g,{as:N,style:{width:`${a}%`,transition:"width 660ms cubic-bezier(0.65, 0, 0.35, 1)",backgroundSize:"300% 100%"},height:"full",borderRadius:"circle",background:n})})};try{d.displayName="Progress",d.__docgenInfo={description:"",displayName:"Progress",props:{value:{defaultValue:null,description:"",name:"value",required:!0,type:{name:"number"}},color:{defaultValue:null,description:"",name:"color",required:!1,type:{name:"ConditionalStyle<Values<MapLeafNodes<{ black: string; white: string; inherit: string; transparent: string; positive: string; negative: string; info: string; warning: string; text100: string; text80: string; text50: string; textInverse100: string; ... 28 more ...; polygonLight: string; }, CSSVarFunction>, { ...; }>>"}}}}}catch{}const G={title:"Components/Progress",component:d,argTypes:{value:{control:{type:"range",min:0,max:1,step:.1}}}},l={args:{value:.5}};var f,x,P;l.parameters={...l.parameters,docs:{...(f=l.parameters)==null?void 0:f.docs,source:{originalSource:`{
  args: {
    value: 0.5
  }
}`,...(P=(x=l.parameters)==null?void 0:x.docs)==null?void 0:P.source}}};const U=["Default"];export{l as Default,U as __namedExportsOrder,G as default};
