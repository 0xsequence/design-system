var d=Object.defineProperty;var a=(p,e)=>d(p,"name",{value:e,configurable:!0});import"./jsx-runtime.cfaa7d39.js";import{c as t,A as x,M as y}from"./Props.ac4c354b.js";import"./iframe.013a05e2.js";import"./Avatar.4b53914d.js";import"./Badge.fb477bc3.js";import"./Box.54858950.js";import"./Button.bee9fb70.js";/* empty css                             *//* empty css                              */import"./Collapsible.dfe54b42.js";import"./Form.c53e55f3.js";import"./Group.7c504f53.js";import"./IconButton.68d929f8.js";import"./LabelledField.4625aa3f.js";import"./Modal.8651af1a.js";import"./Row.fd7e46b0.js";import"./Spinner.3c536184.js";import"./Stack.a05c1c1a.js";import"./Switch.a67fd18b.js";import"./Tabs.ce96cbb9.js";import"./TabbedNav.300c63f6.js";import"./Tag.70125217.js";import{T as o}from"./Text.84464cdd.js";import"./TextInput.5885cdf3.js";import"./ThemeProvider.0357e9c4.js";import"./TokenImage.4eb1b06d.js";import"./Tooltip.f33752c0.js";import"./string.38380a3e.js";import"./index.d24e6c9c.js";import"./es.map.constructor.11a79af8.js";import"./es.number.to-fixed.acc2b001.js";import"./index.3f9518bc.js";import"./vanilla-extract-recipes-createRuntimeFn.esm.e63f122f.js";import"./atoms.css.b06098ab.js";import"./index.module.48a5066b.js";import"./index.b6ba67e1.js";import"./index.module.f6bf6259.js";import"./index.module.fcc8ae8f.js";import"./WarningIcon.1f0968eb.js";import"./index.96be288f.js";import"./tslib.es6.03b483f6.js";import"./index.module.296ba5f7.js";import"./index.f4849dad.js";import"./index.module.a767c098.js";import"./index.module.a1a1a591.js";import"./index.module.bcc6c227.js";import"./index.module.b7aaf0f8.js";function s(){return s=Object.assign?Object.assign.bind():function(p){for(var e=1;e<arguments.length;e++){var n=arguments[e];for(var i in n)Object.prototype.hasOwnProperty.call(n,i)&&(p[i]=n[i])}return p},s.apply(this,arguments)}a(s,"_extends");const r="The quick brown fox jumps over the lazy dog",u={sampleText:r},g="wrapper";function l({components:p,...e}){return t(g,s({},u,e,{components:p,mdxType:"MDXLayout"}),t(y,{title:"Design System/Typography",mdxType:"Meta"}),t("h1",null,"Typography"),t("p",null,"The defined set of typefaces and used in the design system."),t("p",null,t("strong",{parentName:"p"},"xlarge")),t(o,{variant:"xlarge",mdxType:"Text"},r),t("p",null,t("strong",{parentName:"p"},"large")),t(o,{variant:"large",mdxType:"Text"},r),t("p",null,t("strong",{parentName:"p"},"medium")),t(o,{variant:"medium",mdxType:"Text"},r),t("p",null,t("strong",{parentName:"p"},"normal")),t(o,{variant:"normal",mdxType:"Text"},r),t("p",null,t("strong",{parentName:"p"},"small")),t(o,{variant:"small",mdxType:"Text"},r),t("p",null,t("strong",{parentName:"p"},"xsmall")),t(o,{variant:"xsmall",mdxType:"Text"},r),t("p",null,t("strong",{parentName:"p"},"code")),t(o,{variant:"code",mdxType:"Text"},r))}a(l,"MDXContent");l.isMDXComponent=!0;const T=a(()=>{throw new Error("Docs-only story")},"__page");T.parameters={docsOnly:!0};const m={title:"Design System/Typography",includeStories:["__page"]},c={};m.parameters=m.parameters||{};m.parameters.docs={...m.parameters.docs||{},page:()=>t(x,{mdxStoryNameToKey:c,mdxComponentAnnotations:m},t(l,null))};const xt=["sampleText","__page"];export{xt as __namedExportsOrder,T as __page,m as default,r as sampleText};
//# sourceMappingURL=Typography.stories.c598a4da.js.map
