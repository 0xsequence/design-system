import{M as d,C as a,e as i}from"./chunk-HLWAVYOI-Duuv8qgF.js";import{t as p}from"./index-0jTR9t0G.js";import"./helpers.css.ts.vanilla-BZdCf6XI.js";import{v as m}from"./vars.css-Bxe7uErn.js";/* empty css                            */import{j as e}from"./jsx-runtime-CexXSJP5.js";import{useMDXComponents as l}from"./index-gbZvCw43.js";import"./iframe-BsKdl5hu.js";import"../sb-preview/runtime.js";import"./index-BP8_t0zE.js";import"./react-18-DTpxdJzO.js";import"./index-BxmsGmlx.js";import"./chunk-EIRT5I3Z-Cd9gZQWv.js";import"./index-D2DNihGs.js";import"./index-EEBIeVPD.js";import"./index-DrFu-skq.js";import"./color-CJfOpmzb.js";const h=s=>s===""?"":s[0].toUpperCase()+s.slice(1);function c(s){const t=Object.assign({h1:"h1",p:"p",h3:"h3",code:"code"},l(),s.components);return e.jsxs(e.Fragment,{children:[e.jsx(d,{title:"Design System/Colors"}),`
`,e.jsx(t.h1,{id:"colors",children:"Colors"}),`
`,e.jsx(t.p,{children:"Color schemes, scales, accents, and gradients."}),`
`,e.jsx(t.h3,{id:"base-colors",children:"Base Colors"}),`
`,e.jsx(a,{children:e.jsx(i,{title:"Base",subtitle:"--seq-color-[name]",colors:{black:"#000000",white:"#ffffff",transparent:"transparent"}})}),`
`,e.jsx(t.h3,{id:"palettes",children:"Palettes"}),`
`,e.jsxs(t.p,{children:["All colors are defined in palettes. Each palette has a name and a scale. The scale is a number that represents the intensity of the color. For example, ",e.jsx(t.code,{children:"--seq-red-100"})," is a light shade of the red color, while ",e.jsx(t.code,{children:"--seq-red-900"})," is a dark shade of the brand color."]}),`
`,e.jsx(a,{children:Object.entries(p.colors.palettes).map(([o,n])=>e.jsx(i,{title:h(o),subtitle:`--seq-${o}-[scale]`,colors:n},o))}),`
`,e.jsx(t.h3,{id:"gradients",children:"Gradients"}),`
`,e.jsx(t.h3,{id:"semantic-colors",children:"Semantic Colors"}),`
`,e.jsxs(t.p,{children:["Semantic colors point to color palettes and are used to give a name to a color that is used in a specific context. For example, ",e.jsx(t.code,{children:"primary"})," is a semantic color that points to a color in the ",e.jsx(t.code,{children:"brand"})," palette. This way, if the brand color changes, the ",e.jsx(t.code,{children:"primary"})," color will change as well."]}),`
`,e.jsx(a,{children:Object.entries(m.colors).map(([o,n])=>e.jsx(i,{title:o,subtitle:`--seq-colors-${o}`,colors:{[o]:n}},o))})]})}function x(s={}){const{wrapper:t}=Object.assign({},l(),s.components);return t?e.jsx(t,{...s,children:e.jsx(c,{...s})}):c(s)}const j=()=>{throw new Error("Docs-only story")};j.parameters={docsOnly:!0};const r={title:"Design System/Colors",tags:["stories-mdx"],includeStories:["__page"]};r.parameters=r.parameters||{};r.parameters.docs={...r.parameters.docs||{},page:x};const B=["__page"];export{B as __namedExportsOrder,j as __page,r as default};
