{"version":3,"file":"FileInput-a0d6207b.js","sources":["../../src/hooks/useCombinedRefs.ts","../../src/components/FileInput/FileInput.tsx"],"sourcesContent":["import { Ref } from 'react'\n\n/**\n * Combines multiple refs into one\n * @param refs\n * @returns\n */\nexport const useCombinedRefs =\n  (...refs: Array<Ref<any>>): Ref<any> =>\n  (element: any) =>\n    refs.forEach(ref => {\n      if (!ref) {\n        return\n      }\n\n      if (typeof ref === 'function') {\n        ref(element)\n      } else {\n        ;(ref as any).current = element\n      }\n    })\n","import { clsx } from 'clsx'\nimport { ChangeEvent, ElementType, forwardRef, useRef, useState } from 'react'\n\nimport {\n  Box,\n  PolymorphicComponent,\n  PolymorphicProps,\n  PolymorphicRef,\n} from '~/components/Box'\nimport { Field, FieldProps } from '~/components/Field'\nimport { IconButton } from '~/components/IconButton'\nimport { Text } from '~/components/Text'\nimport { useCombinedRefs } from '~/hooks/useCombinedRefs'\nimport { CloseIcon } from '~/icons'\n\nimport * as styles from './styles.css'\n\nconst MIME_TYPES = {\n  png: '.png,image/png',\n  jpeg: '.jpeg,image/jpeg',\n  jpg: '.jpg,image/jpg',\n  images: 'image/*',\n  pdf: '.pdf,application/pdf',\n}\n\ntype AllowedMimeTypes = keyof typeof MIME_TYPES\n\ntype FileData = {\n  name: string\n  size: number\n  extension: string\n}\n\nexport type FileInputProps = FieldProps &\n  styles.WrapVariants & {\n    disabled?: boolean\n    name: string\n    validExtensions: AllowedMimeTypes[]\n    value?: File\n    onValueChange?: (value: File | null) => void\n  }\n\nexport const FileInput: PolymorphicComponent<FileInputProps, 'input'> =\n  forwardRef(\n    <T extends ElementType>(\n      props: PolymorphicProps<FileInputProps, T>,\n      ref: PolymorphicRef<T>\n    ) => {\n      const {\n        borderRadius = 'md',\n        description,\n        disabled = false,\n        id,\n        label = '',\n        labelLocation = 'hidden',\n        name,\n        onValueChange,\n        placeholder = 'Upload a file',\n        validExtensions,\n        ...rest\n      } = props\n      const inputRef = useRef<HTMLInputElement>(null)\n      const combinedRef = useCombinedRefs(inputRef, ref)\n      const [fileData, setFileData] = useState<FileData | null>(null)\n\n      const handleChange = (e: ChangeEvent<HTMLInputElement>) => {\n        const filelist = e.currentTarget.files as FileList\n        if (!filelist || !filelist[0]) {\n          return\n        }\n\n        const file = filelist[0]\n        const filename = file.name\n        const filesize = file.size / 1000\n\n        setFileData({\n          name: filename,\n          size: filesize,\n          extension: filename.split('.').pop() ?? '',\n        })\n\n        onValueChange?.(file)\n      }\n\n      const accept = validExtensions.map(ext => MIME_TYPES[ext]).join(',')\n\n      return (\n        <Field\n          description={description}\n          disabled={disabled}\n          display=\"grid\"\n          id={id ?? name}\n          label={label}\n          labelLocation={labelLocation}\n        >\n          <Box width=\"full\">\n            <Box\n              justifyContent={fileData ? 'space-between' : 'flex-start'}\n              color={fileData ? 'text100' : 'text50'}\n              className={clsx(\n                styles.wrap,\n                styles.wrapVariants({ borderRadius })\n              )}\n            >\n              {fileData ? (\n                <Box flexDirection=\"row\" gap=\"2\" alignItems=\"baseline\">\n                  <Text>{fileData.name}</Text>\n                  <Text color=\"text50\" variant=\"xsmall\">\n                    {fileData.size.toFixed(2)} kb\n                  </Text>\n                </Box>\n              ) : (\n                <Text>{placeholder}</Text>\n              )}\n\n              <Box\n                accept={accept}\n                as=\"input\"\n                className={styles.input}\n                cursor={fileData ? 'text' : 'pointer'}\n                disabled={disabled || !!fileData}\n                id={id ?? name}\n                name={name}\n                onChange={handleChange}\n                ref={combinedRef}\n                type=\"file\"\n                {...rest}\n              />\n\n              {fileData && (\n                <IconButton\n                  cursor=\"pointer\"\n                  icon={CloseIcon}\n                  size=\"xs\"\n                  onClick={ev => {\n                    ev.preventDefault()\n                    ev.stopPropagation()\n\n                    inputRef.current?.value && (inputRef.current.value = '')\n\n                    onValueChange?.(null)\n                    setFileData(null)\n                  }}\n                  zIndex=\"10\"\n                />\n              )}\n            </Box>\n          </Box>\n        </Field>\n      )\n    }\n  )\n"],"names":["useCombinedRefs","refs","element","ref","MIME_TYPES","FileInput","forwardRef","props","borderRadius","description","disabled","id","label","labelLocation","name","onValueChange","placeholder","validExtensions","rest","inputRef","useRef","combinedRef","fileData","setFileData","useState","handleChange","e","filelist","file","filename","filesize","accept","ext","jsx","Field","Box","jsxs","clsx","styles.wrap","styles.wrapVariants","Text","styles.input","IconButton","CloseIcon","ev","_a"],"mappings":"0cAOO,MAAMA,EACX,IAAIC,IACHC,GACCD,EAAK,QAAeE,GAAA,CACbA,IAID,OAAOA,GAAQ,WACjBA,EAAID,CAAO,EAETC,EAAY,QAAUD,EAE5B,CAAC,whBCHL,MAAAE,EAAA,CAAmB,IAAA,iBACZ,KAAA,mBACC,IAAA,iBACD,OAAA,UACG,IAAA,sBAEV,EAmBOC,EAAAC,EAAA,WACL,CAAAC,EAAAJ,IAAA,CAKI,KAAA,CAAM,aAAAK,EAAA,KACW,YAAAC,EACf,SAAAC,EAAA,GACW,GAAAC,EACX,MAAAC,EAAA,GACQ,cAAAC,EAAA,SACQ,KAAAC,EAChB,cAAAC,EACA,YAAAC,EAAA,gBACc,gBAAAC,EACd,GAAAC,CACG,EAAAX,EAELY,EAAAC,SAAA,IAAA,EACAC,EAAArB,EAAAmB,EAAAhB,CAAA,EACA,CAAAmB,EAAAC,CAAA,EAAAC,EAAA,SAAA,IAAA,EAEAC,EAAAC,GAAA,CACE,MAAAC,EAAAD,EAAA,cAAA,MACA,GAAA,CAAAC,GAAA,CAAAA,EAAA,CAAA,EACE,OAGF,MAAAC,EAAAD,EAAA,CAAA,EACAE,EAAAD,EAAA,KACAE,EAAAF,EAAA,KAAA,IAEAL,EAAA,CAAY,KAAAM,EACJ,KAAAC,EACA,UAAAD,EAAA,MAAA,GAAA,EAAA,IAAA,GAAA,EACkC,CAAA,EAG1Cd,GAAA,MAAAA,EAAAa,EAAoB,EAGtBG,EAAAd,EAAA,IAAAe,GAAA5B,EAAA4B,CAAA,CAAA,EAAA,KAAA,GAAA,EAEA,OAAAC,EACEC,EAAC,CAAA,YAAAzB,EACC,SAAAC,EACA,QAAA,OACQ,GAAAC,GAAAG,EACE,MAAAF,EACV,cAAAC,EACA,SAAAoB,EAAAE,EAAA,CAAA,MAAA,OAAA,SAAAC,EAGED,EAAC,CAAA,eAAAb,EAAA,gBAAA,aAC8C,MAAAA,EAAA,UAAA,SACf,UAAAe,EACnBC,EACFC,EAAA,CAAA,aAAA/B,EAAA,CAC6B,EACtC,SAAA,CAECc,EAAAc,EAAAD,EAAA,CAAA,cAAA,MAAA,IAAA,IAAA,WAAA,WAAA,SAAA,CAEGF,EAAAO,EAAA,CAAA,SAAAlB,EAAA,IAAA,CAAA,EAAqBc,EAAAI,EAAA,CAAA,MAAA,SAAA,QAAA,SAAA,SAAA,CAElBlB,EAAA,KAAA,QAAA,CAAA,EAAuB,KAAE,EAAA,CAC5B,CAAA,CAAA,EAAAW,EAAAO,EAAA,CAAA,SAAAxB,CAAA,CAAA,EAGiBiB,EAGrBE,EAAC,CAAA,OAAAJ,EACC,GAAA,QACG,UAAAU,EACe,OAAAnB,EAAA,OAAA,UACU,SAAAZ,GAAA,CAAA,CAAAY,EACJ,GAAAX,GAAAG,EACd,KAAAA,EACV,SAAAW,EACU,IAAAJ,EACL,KAAA,OACA,GAAAH,CACD,CAAA,EACNI,GAAAW,EAGES,EAAC,CAAA,OAAA,UACQ,KAAAC,EACD,KAAA,KACD,QAAAC,GAAA,OAEHA,EAAA,eAAA,EACAA,EAAA,gBAAA,GAEAC,EAAA1B,EAAA,UAAA,MAAA0B,EAAA,QAAA1B,EAAA,QAAA,MAAA,IAEAJ,GAAA,MAAAA,EAAA,MACAQ,EAAA,IAAA,CAAgB,EAClB,OAAA,IACO,CAAA,CACT,CAAA,CAAA,EAAA,CAGN,CAAA,CACF,CAGN"}