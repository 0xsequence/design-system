var d=Object.defineProperty;var a=(p,o)=>d(p,"name",{value:o,configurable:!0});import"./jsx-runtime.f0566386.js";import{c as t,A as x,M as y}from"./Props.1de574c7.js";import"./iframe.a4443ffa.js";import"./Avatar.f4bf44c7.js";import"./Badge.826065b5.js";import"./Box.a2cee02f.js";import"./Button.8d0ee09d.js";/* empty css                             *//* empty css                              */import"./Collapsible.69b9ec8f.js";import"./ControlledTextInput.b447bec4.js";import"./Group.e216a268.js";import"./IconButton.1ba6527d.js";import"./LabelledField.35e56d63.js";import"./Modal.a88e8311.js";import"./Row.e43a52d9.js";import"./Spinner.13767802.js";import"./Stack.cae093fd.js";import"./Switch.98cdda63.js";import"./Tabs.4199687d.js";import"./TabbedNav.02270aff.js";import"./Tag.4236966e.js";import{T as e}from"./Text.b3feb25b.js";import"./TextInput.a85c3cf6.js";import"./ThemeProvider.f6f547e3.js";import"./TokenImage.66efe43f.js";import"./Tooltip.9c2b790c.js";import"./string.27615924.js";import"./index.875cd4b5.js";import"./es.map.constructor.af0b62b2.js";import"./es.number.to-fixed.89460156.js";import"./index.3f9518bc.js";import"./vanilla-extract-recipes-createRuntimeFn.esm.e63f122f.js";import"./atoms.css.b06098ab.js";import"./index.module.4b25f822.js";import"./index.dd4c6f4e.js";import"./index.module.7b6589ea.js";import"./index.module.56773449.js";import"./WarningIcon.53efd291.js";import"./index.816c0931.js";import"./tslib.es6.03b483f6.js";import"./index.module.997674ed.js";import"./index.5e566362.js";import"./Scroll.e1d307ca.js";import"./index.module.5926f386.js";import"./index.module.61e4dd36.js";import"./index.module.e6a78ae1.js";import"./index.module.d02414b9.js";function s(){return s=Object.assign?Object.assign.bind():function(p){for(var o=1;o<arguments.length;o++){var n=arguments[o];for(var i in n)Object.prototype.hasOwnProperty.call(n,i)&&(p[i]=n[i])}return p},s.apply(this,arguments)}a(s,"_extends");const r="The quick brown fox jumps over the lazy dog",u={sampleText:r},g="wrapper";function l({components:p,...o}){return t(g,s({},u,o,{components:p,mdxType:"MDXLayout"}),t(y,{title:"Design System/Typography",mdxType:"Meta"}),t("h1",null,"Typography"),t("p",null,"The defined set of typefaces and used in the design system."),t("p",null,t("strong",{parentName:"p"},"xlarge")),t(e,{variant:"xlarge",mdxType:"Text"},r),t("p",null,t("strong",{parentName:"p"},"large")),t(e,{variant:"large",mdxType:"Text"},r),t("p",null,t("strong",{parentName:"p"},"medium")),t(e,{variant:"medium",mdxType:"Text"},r),t("p",null,t("strong",{parentName:"p"},"normal")),t(e,{variant:"normal",mdxType:"Text"},r),t("p",null,t("strong",{parentName:"p"},"small")),t(e,{variant:"small",mdxType:"Text"},r),t("p",null,t("strong",{parentName:"p"},"xsmall")),t(e,{variant:"xsmall",mdxType:"Text"},r),t("p",null,t("strong",{parentName:"p"},"code")),t(e,{variant:"code",mdxType:"Text"},r))}a(l,"MDXContent");l.isMDXComponent=!0;const T=a(()=>{throw new Error("Docs-only story")},"__page");T.parameters={docsOnly:!0};const m={title:"Design System/Typography",includeStories:["__page"]},c={};m.parameters=m.parameters||{};m.parameters.docs={...m.parameters.docs||{},page:()=>t(x,{mdxStoryNameToKey:c,mdxComponentAnnotations:m},t(l,null))};const yt=["sampleText","__page"];export{yt as __namedExportsOrder,T as __page,m as default,r as sampleText};
//# sourceMappingURL=Typography.stories.5415cec4.js.map
