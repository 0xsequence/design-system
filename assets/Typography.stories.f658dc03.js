var d=Object.defineProperty;var a=(p,o)=>d(p,"name",{value:o,configurable:!0});import"./jsx-runtime.bef1881e.js";import{c as t,A as x,M as y}from"./Props.4d2195a4.js";import"./iframe.5b62c891.js";import"./Avatar.698b6f62.js";import"./Badge.0330992d.js";import"./Box.c689a501.js";import"./Button.959281bd.js";/* empty css                             *//* empty css                              */import"./Collapsible.bad3df77.js";import"./ControlledTextInput.696dbc5c.js";import"./Group.9d1025f0.js";import"./IconButton.2a86e003.js";import"./LabelledField.b94640fc.js";import"./Modal.61b83360.js";import"./Row.ba02815e.js";import"./Spinner.2fc15564.js";import"./Stack.3c532c85.js";import"./Switch.cc50bcc8.js";import"./Tabs.6c25c3bb.js";import"./TabbedNav.f334cf22.js";import"./Tag.cc59f04a.js";import{T as e}from"./Text.d4cb5076.js";import"./TextInput.48a7e50c.js";import"./ThemeProvider.72a5703d.js";import"./TokenImage.6583c698.js";import"./Tooltip.19fba13d.js";import"./string.acff75f6.js";import"./index.dc18a2ed.js";import"./es.map.constructor.3aab7357.js";import"./es.number.to-fixed.e9ef53a1.js";import"./index.3f9518bc.js";import"./vanilla-extract-recipes-createRuntimeFn.esm.e63f122f.js";import"./atoms.css.b06098ab.js";import"./index.module.325ecc51.js";import"./index.d4817ac9.js";import"./index.module.14995526.js";import"./index.module.b331d1e2.js";import"./WarningIcon.b17b104e.js";import"./index.6de44805.js";import"./tslib.es6.03b483f6.js";import"./index.module.7bf4fe02.js";import"./index.c07eca61.js";import"./Scroll.8f68c619.js";import"./index.module.49ac17ad.js";import"./index.module.e27affbc.js";import"./index.module.bc144e3d.js";import"./index.module.97d4f1ac.js";function s(){return s=Object.assign?Object.assign.bind():function(p){for(var o=1;o<arguments.length;o++){var n=arguments[o];for(var i in n)Object.prototype.hasOwnProperty.call(n,i)&&(p[i]=n[i])}return p},s.apply(this,arguments)}a(s,"_extends");const r="The quick brown fox jumps over the lazy dog",u={sampleText:r},g="wrapper";function l({components:p,...o}){return t(g,s({},u,o,{components:p,mdxType:"MDXLayout"}),t(y,{title:"Design System/Typography",mdxType:"Meta"}),t("h1",null,"Typography"),t("p",null,"The defined set of typefaces and used in the design system."),t("p",null,t("strong",{parentName:"p"},"xlarge")),t(e,{variant:"xlarge",mdxType:"Text"},r),t("p",null,t("strong",{parentName:"p"},"large")),t(e,{variant:"large",mdxType:"Text"},r),t("p",null,t("strong",{parentName:"p"},"medium")),t(e,{variant:"medium",mdxType:"Text"},r),t("p",null,t("strong",{parentName:"p"},"normal")),t(e,{variant:"normal",mdxType:"Text"},r),t("p",null,t("strong",{parentName:"p"},"small")),t(e,{variant:"small",mdxType:"Text"},r),t("p",null,t("strong",{parentName:"p"},"xsmall")),t(e,{variant:"xsmall",mdxType:"Text"},r),t("p",null,t("strong",{parentName:"p"},"code")),t(e,{variant:"code",mdxType:"Text"},r))}a(l,"MDXContent");l.isMDXComponent=!0;const T=a(()=>{throw new Error("Docs-only story")},"__page");T.parameters={docsOnly:!0};const m={title:"Design System/Typography",includeStories:["__page"]},c={};m.parameters=m.parameters||{};m.parameters.docs={...m.parameters.docs||{},page:()=>t(x,{mdxStoryNameToKey:c,mdxComponentAnnotations:m},t(l,null))};const yt=["sampleText","__page"];export{yt as __namedExportsOrder,T as __page,m as default,r as sampleText};
//# sourceMappingURL=Typography.stories.f658dc03.js.map
