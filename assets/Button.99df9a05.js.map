{"version":3,"file":"Button.99df9a05.js","sources":["../../src/components/Button/Button.tsx"],"sourcesContent":["import { forwardRef, ElementType, ComponentType } from 'react'\n\nimport {\n  Box,\n  PolymorphicComponent,\n  PolymorphicProps,\n  PolymorphicRef,\n} from '~/components/Box'\nimport { Text } from '~/components/Text'\nimport { IconProps } from '~/icons/types'\n\nimport { buttonVariants, iconVariants, ButtonVariants } from './styles.css'\n\ntype ButtonProps = ButtonVariants & {\n  disabled?: boolean\n  pending?: boolean\n  label?: string\n  width?: 'full' | 'normal'\n  LeftIcon?: ComponentType<IconProps>\n  RightIcon?: ComponentType<IconProps>\n}\n\nexport const Button: PolymorphicComponent<ButtonProps, 'button'> = forwardRef(\n  <T extends ElementType>(\n    props: PolymorphicProps<ButtonProps, T>,\n    ref: PolymorphicRef<T>\n  ) => {\n    const {\n      as = 'button',\n      disabled = false,\n      pending = false,\n      label,\n      LeftIcon,\n      RightIcon,\n      size = 'md',\n      variant = 'glass',\n      width = 'normal',\n      ...boxProps\n    } = props\n\n    const iconOnly = LeftIcon !== undefined && label === undefined\n\n    return (\n      <Box\n        as={as}\n        className={buttonVariants({\n          iconOnly,\n          size: variant === 'text' ? undefined : size,\n          variant,\n          width,\n        })}\n        disabled={disabled || pending}\n        ref={ref}\n        {...boxProps}\n      >\n        <Box\n          as=\"span\"\n          display=\"flex\"\n          justifyContent=\"space-between\"\n          alignItems=\"center\"\n          gap={size === 'xs' ? '1' : '2'}\n        >\n          <Box\n            as=\"span\"\n            display=\"flex\"\n            justifyContent=\"flex-start\"\n            alignItems=\"center\"\n            gap={size === 'xs' ? '1' : '2'}\n          >\n            {LeftIcon && <LeftIcon className={iconVariants({ size })} />}\n            {!iconOnly && <Text>{label}</Text>}\n          </Box>\n\n          {RightIcon && <RightIcon className={iconVariants({ size })} />}\n        </Box>\n      </Box>\n    )\n  }\n)\n"],"names":["Button","forwardRef","props","ref","as","disabled","pending","label","LeftIcon","RightIcon","variant","width","boxProps","iconOnly","_jsx","Box","buttonVariants","size","_jsxs","iconVariants","Text"],"mappings":"0pDAsBO,MAAAA,EAAAC,EAAA,QAAA,WAAA,CAAAC,EAAAC,IAAA,CAKH,KAAA,CAAM,GAAAC,EAAA,SACC,SAAAC,EAAA,GACM,QAAAC,EAAA,GACD,MAAAC,EACVA,SAAAA,EACAC,UAAAA,EACAC,KAAAA,EAAAA,KACO,QAAAC,EAAA,QACG,MAAAC,EAAA,YACFC,CACLA,EAAAA,EAGLC,EAAAL,IAAA,QAAAD,IAAA,OAEA,OAAAO,EAAAC,EAAA,CACM,GAAAX,EACF,UAAAY,EAAA,CAC0B,SAAAH,EACxBA,KAAAA,IAAAA,OAAAA,OAAAA,EACuCI,QAAAA,EACvCP,MAAAA,CACAC,CAAAA,EACD,SAAAN,GAAAC,EACqBA,IAAAA,EACtB,GAAAM,EACIA,SAAAA,EAAAA,EAAAA,CAEA,GAAA,OACC,QAAA,OACK,eAAA,gBACO,WAAA,SACJ,IAAAK,IAAA,KAAA,IAAA,IACgB,SAAA,CAAAC,EAAAH,EAAA,CAEvB,GAAA,OACC,QAAA,OACK,eAAA,aACO,WAAA,SACJ,IAAAE,IAAA,KAAA,IAAA,IACgB,SAAA,CAAAT,GAAAM,EAAAN,EAAA,CAEL,UAAAW,EAAA,CAAyB,KAAAF,CAAEA,CAAAA,CAAM,CAAA,EAAA,CAAAJ,GAAAC,EAAAM,EAAA,CACpC,SAAAb,CAAEA,CAAAA,CAAAA,CAAa,CAAA,EAAAE,GAAAK,EAAAL,EAAA,CAGZ,UAAAU,EAAA,CAAyB,KAAAF,CAAEA,CAAAA,CAAM,CAAA,CAAA,CAAK,CAAA,CAAA,CAAA,CAItE,CAAA"}